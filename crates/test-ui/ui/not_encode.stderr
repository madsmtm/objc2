error[E0277]: the trait bound `Vec<u32>: Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<Vec<u32>>();
  |                 ^^^^^^^^ the trait `Encode` is not implemented for `Vec<u32>`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `(): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<()>();
  |                 ^^ the trait `Encode` is not implemented for `()`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `&(): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<&()>();
  |                 ^^^ the trait `RefEncode` is not implemented for `&()`, which is required by `&(): Encode`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
  = note: required for `&()` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `(): RefEncode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<*const ()>();
  |                 ^^^^^^^^^ the trait `RefEncode` is not implemented for `()`, which is required by `*const (): Encode`
  |
  = help: the following other types implement trait `RefEncode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AnyClass
            AnyObject
            AnyProtocol
            AtomicI16
          and $N others
  = note: required for `*const ()` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `c_void: Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<c_void>();
  |                 ^^^^^^ the trait `Encode` is not implemented for `c_void`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `(): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<&Block<dyn Fn((), i32)>>();
  |                 ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `()`, which is required by `&block2::Block<dyn Fn((), i32)>: Encode`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
  = note: required for `()` to implement `EncodeArgument`
  = note: required for `dyn Fn((), i32)` to implement `BlockFn`
  = note: required for `block2::Block<dyn Fn((), i32)>` to implement `RefEncode`
  = note: required for `&block2::Block<dyn Fn((), i32)>` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `bool: Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<&Block<dyn Fn() -> bool>>();
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `bool`, which is required by `&block2::Block<dyn Fn() -> bool>: Encode`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
  = note: required for `bool` to implement `EncodeReturn`
  = note: required for `dyn Fn() -> bool` to implement `BlockFn`
  = note: required for `block2::Block<dyn Fn() -> bool>` to implement `RefEncode`
  = note: required for `&block2::Block<dyn Fn() -> bool>` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `fn() -> &'static (): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<fn() -> &'static ()>();
  |                 ^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `fn() -> &'static ()`
  |
  = help: the following other types implement trait `Encode`:
            extern "C" fn() -> Ret
            extern "C" fn(A) -> Ret
            extern "C" fn(A, ...) -> Ret
            extern "C" fn(A, B) -> Ret
            extern "C" fn(A, B, ...) -> Ret
            extern "C" fn(A, B, C) -> Ret
            extern "C" fn(A, B, C, ...) -> Ret
            extern "C" fn(A, B, C, D) -> Ret
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `fn(()): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<fn(())>();
  |                 ^^^^^^ the trait `Encode` is not implemented for `fn(())`
  |
  = help: the following other types implement trait `Encode`:
            extern "C" fn() -> Ret
            extern "C" fn(A) -> Ret
            extern "C" fn(A, ...) -> Ret
            extern "C" fn(A, B) -> Ret
            extern "C" fn(A, B, ...) -> Ret
            extern "C" fn(A, B, C) -> Ret
            extern "C" fn(A, B, C, ...) -> Ret
            extern "C" fn(A, B, C, D) -> Ret
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `fn(i32, ()): Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<fn(i32, ())>();
  |                 ^^^^^^^^^^^ the trait `Encode` is not implemented for `fn(i32, ())`
  |
  = help: the following other types implement trait `Encode`:
            extern "C" fn() -> Ret
            extern "C" fn(A) -> Ret
            extern "C" fn(A, ...) -> Ret
            extern "C" fn(A, B) -> Ret
            extern "C" fn(A, B, ...) -> Ret
            extern "C" fn(A, B, C) -> Ret
            extern "C" fn(A, B, C, ...) -> Ret
            extern "C" fn(A, B, C, D) -> Ret
          and $N others
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `&objc2::runtime::Sel: Encode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<&Sel>();
  |                 ^^^^ the trait `RefEncode` is not implemented for `&objc2::runtime::Sel`, which is required by `&objc2::runtime::Sel: Encode`
  |
  = note: required for `&objc2::runtime::Sel` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`
help: consider removing the leading `&`-reference
  |
26 -     is_encode::<&Sel>();
26 +     is_encode::<Sel>();
   |

error[E0277]: the trait bound `UnsafeCell<&u8>: OptionEncode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<Option<UnsafeCell<&u8>>>();
  |                 ^^^^^^^^^^^^^^^^^^^^^^^ the trait `OptionEncode` is not implemented for `UnsafeCell<&u8>`, which is required by `Option<UnsafeCell<&u8>>: Encode`
  |
  = help: the following other types implement trait `OptionEncode`:
            &'a T
            &'a mut T
            NonNull<T>
            NonZero<i16>
            NonZero<i32>
            NonZero<i64>
            NonZero<i8>
            NonZero<isize>
          and $N others
  = note: required for `Option<UnsafeCell<&u8>>` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`

error[E0277]: the trait bound `Cell<&u8>: OptionEncode` is not satisfied
 --> ui/not_encode.rs
  |
  |     is_encode::<Option<Cell<&u8>>>();
  |                 ^^^^^^^^^^^^^^^^^ the trait `OptionEncode` is not implemented for `Cell<&u8>`, which is required by `Option<Cell<&u8>>: Encode`
  |
  = help: the following other types implement trait `OptionEncode`:
            &'a T
            &'a mut T
            NonNull<T>
            NonZero<i16>
            NonZero<i32>
            NonZero<i64>
            NonZero<i8>
            NonZero<isize>
          and $N others
  = note: required for `Option<Cell<&u8>>` to implement `Encode`
note: required by a bound in `is_encode`
 --> ui/not_encode.rs
  |
  | fn is_encode<T: Encode>() {}
  |                 ^^^^^^ required by this bound in `is_encode`
