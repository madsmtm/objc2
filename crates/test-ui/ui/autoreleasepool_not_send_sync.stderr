error[E0277]: `*mut c_void` cannot be shared between threads safely
 --> ui/autoreleasepool_not_send_sync.rs
  |
  |     needs_sync::<AutoreleasePool>();
  |                  ^^^^^^^^^^^^^^^ `*mut c_void` cannot be shared between threads safely
  |
  = help: within `AutoreleasePool`, the trait `Sync` is not implemented for `*mut c_void`
  = note: required because it appears within the type `AutoreleasePool`
note: required by a bound in `needs_sync`
 --> ui/autoreleasepool_not_send_sync.rs
  |
  | fn needs_sync<T: ?Sized + Sync>() {}
  |                           ^^^^ required by this bound in `needs_sync`

error[E0277]: `*mut UnsafeCell<c_void>` cannot be shared between threads safely
 --> ui/autoreleasepool_not_send_sync.rs
  |
  |     needs_sync::<AutoreleasePool>();
  |                  ^^^^^^^^^^^^^^^ `*mut UnsafeCell<c_void>` cannot be shared between threads safely
  |
  = help: within `AutoreleasePool`, the trait `Sync` is not implemented for `*mut UnsafeCell<c_void>`
  = note: required because it appears within the type `PhantomData<*mut UnsafeCell<c_void>>`
  = note: required because it appears within the type `AutoreleasePool`
note: required by a bound in `needs_sync`
 --> ui/autoreleasepool_not_send_sync.rs
  |
  | fn needs_sync<T: ?Sized + Sync>() {}
  |                           ^^^^ required by this bound in `needs_sync`

error[E0277]: `*mut c_void` cannot be sent between threads safely
 --> ui/autoreleasepool_not_send_sync.rs
  |
  |     needs_send::<AutoreleasePool>();
  |                  ^^^^^^^^^^^^^^^ `*mut c_void` cannot be sent between threads safely
  |
  = help: within `AutoreleasePool`, the trait `Send` is not implemented for `*mut c_void`
  = note: required because it appears within the type `AutoreleasePool`
note: required by a bound in `needs_send`
 --> ui/autoreleasepool_not_send_sync.rs
  |
  | fn needs_send<T: ?Sized + Send>() {}
  |                           ^^^^ required by this bound in `needs_send`

error[E0277]: `*mut UnsafeCell<c_void>` cannot be sent between threads safely
 --> ui/autoreleasepool_not_send_sync.rs
  |
  |     needs_send::<AutoreleasePool>();
  |                  ^^^^^^^^^^^^^^^ `*mut UnsafeCell<c_void>` cannot be sent between threads safely
  |
  = help: within `AutoreleasePool`, the trait `Send` is not implemented for `*mut UnsafeCell<c_void>`
  = note: required because it appears within the type `PhantomData<*mut UnsafeCell<c_void>>`
  = note: required because it appears within the type `AutoreleasePool`
note: required by a bound in `needs_send`
 --> ui/autoreleasepool_not_send_sync.rs
  |
  | fn needs_send<T: ?Sized + Send>() {}
  |                           ^^^^ required by this bound in `needs_send`
