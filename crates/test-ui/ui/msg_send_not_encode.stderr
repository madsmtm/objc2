error[E0277]: the trait bound `Vec<u8>: Encode` is not satisfied
 --> ui/msg_send_not_encode.rs
  |
  |         let _: Vec<u8> = msg_send![cls, new];
  |                          ^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `Vec<u8>`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            ()
            *const T
            *const c_void
            *mut T
            *mut c_void
            AtomicI16
          and $N others
  = note: required for `Vec<u8>` to implement `EncodeConvert`
note: required by a bound in `send_message`
 --> $WORKSPACE/crates/objc2/src/message/mod.rs
  |
  |         R: EncodeConvert,
  |            ^^^^^^^^^^^^^ required by this bound in `send_message`
  = note: this error originates in the macro `$crate::__msg_send_helper` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Vec<u8>: Encode` is not satisfied
 --> ui/msg_send_not_encode.rs
  |
  |         let _: () = msg_send![cls, newWith: x];
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |                     |
  |                     the trait `Encode` is not implemented for `Vec<u8>`
  |                     required by a bound introduced by this call
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            ()
            *const T
            *const c_void
            *mut T
            *mut c_void
            AtomicI16
          and $N others
  = note: required for `Vec<u8>` to implement `EncodeConvert`
  = note: required for `(Vec<u8>,)` to implement `MessageArguments`
note: required by a bound in `send_message`
 --> $WORKSPACE/crates/objc2/src/message/mod.rs
  |
  |         A: MessageArguments,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `send_message`
  = note: this error originates in the macro `$crate::__msg_send_helper` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)
