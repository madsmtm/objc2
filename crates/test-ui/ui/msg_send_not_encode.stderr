error[E0277]: the trait bound `Vec<u8>: ConvertReturn` is not satisfied
 --> ui/msg_send_not_encode.rs
  |
  |         let _: Vec<u8> = msg_send![cls, new];
  |                          ^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `Vec<u8>`, which is required by `Vec<u8>: ConvertReturn`
  |
  = help: the trait `ConvertReturn` is implemented for `bool`
  = note: required for `Vec<u8>` to implement `EncodeReturn`
  = note: required for `Vec<u8>` to implement `ConvertReturn`
note: required by a bound in `MsgSend::send_message`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send.rs
  |
  |     unsafe fn send_message<A, R>(self, sel: Sel, args: A) -> R
  |               ------------ required by a bound in this associated function
...
  |         R: ConvertReturn,
  |            ^^^^^^^^^^^^^ required by this bound in `MsgSend::send_message`
  = note: this error originates in the macro `$crate::__msg_send_helper` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Vec<u8>: Encode` is not satisfied
 --> ui/msg_send_not_encode.rs
  |
  |         let _: () = msg_send![cls, newWith: x];
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `Vec<u8>`, which is required by `(Vec<u8>,): ConvertArguments`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
  = note: required for `Vec<u8>` to implement `EncodeArgument`
  = note: required for `Vec<u8>` to implement `ConvertArgument`
  = note: required for `(Vec<u8>,)` to implement `ConvertArguments`
note: required by a bound in `MsgSend::send_message`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send.rs
  |
  |     unsafe fn send_message<A, R>(self, sel: Sel, args: A) -> R
  |               ------------ required by a bound in this associated function
  |     where
  |         A: ConvertArguments,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `MsgSend::send_message`
  = note: this error originates in the macro `$crate::__msg_send_helper` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `(): Encode` is not satisfied
 --> ui/msg_send_not_encode.rs
  |
  |         let _: () = msg_send![cls, unitAsArgument: ()];
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Encode` is not implemented for `()`, which is required by `((),): ConvertArguments`
  |
  = help: the following other types implement trait `Encode`:
            &'a T
            &'a mut T
            *const T
            *mut T
            AtomicI16
            AtomicI32
            AtomicI64
            AtomicI8
          and $N others
  = note: required for `()` to implement `EncodeArgument`
  = note: required for `()` to implement `ConvertArgument`
  = note: required for `((),)` to implement `ConvertArguments`
note: required by a bound in `MsgSend::send_message`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send.rs
  |
  |     unsafe fn send_message<A, R>(self, sel: Sel, args: A) -> R
  |               ------------ required by a bound in this associated function
  |     where
  |         A: ConvertArguments,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `MsgSend::send_message`
  = note: this error originates in the macro `$crate::__msg_send_helper` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)
