error[E0277]: the trait bound `NSObject: ImplementedBy<NSObject>` is not satisfied
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<NSObject> = ProtocolObject::from_ref(&*obj);
  |                                        ------------------------ ^^^^^ the trait `ImplementedBy<NSObject>` is not implemented for `NSObject`
  |                                        |
  |                                        required by a bound introduced by this call
  |
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: the trait bound `dyn Send: ImplementedBy<NSObject>` is not satisfied
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn Send> = ProtocolObject::from_ref(&*obj);
  |                                        ------------------------ ^^^^^ the trait `ImplementedBy<NSObject>` is not implemented for `dyn Send`
  |                                        |
  |                                        required by a bound introduced by this call
  |
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: the trait bound `dyn Foo: ImplementedBy<NSObject>` is not satisfied
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn Foo> = ProtocolObject::from_ref(&*obj);
  |                                       ------------------------ ^^^^^ the trait `ImplementedBy<NSObject>` is not implemented for `dyn Foo`
  |                                       |
  |                                       required by a bound introduced by this call
  |
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: `*const UnsafeCell<()>` cannot be sent between threads safely
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSObjectProtocol + Send> = ProtocolObject::from_ref(&*obj);
  |                                                           ------------------------ ^^^^^ `*const UnsafeCell<()>` cannot be sent between threads safely
  |                                                           |
  |                                                           required by a bound introduced by this call
  |
  = help: within `NSObject`, the trait `Send` is not implemented for `*const UnsafeCell<()>`, which is required by `dyn NSObjectProtocol + Send: ImplementedBy<NSObject>`
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
  = note: required because it appears within the type `(*const UnsafeCell<()>, PhantomPinned)`
note: required because it appears within the type `PhantomData<(*const UnsafeCell<()>, PhantomPinned)>`
 --> $RUST/core/src/marker.rs
  |
  | pub struct PhantomData<T: ?Sized>;
  |            ^^^^^^^^^^^
note: required because it appears within the type `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>`
 --> $RUST/core/src/cell.rs
  |
  | pub struct UnsafeCell<T: ?Sized> {
  |            ^^^^^^^^^^
note: required because it appears within the type `objc_object`
 --> $WORKSPACE/crates/objc-sys/src/object.rs
  |
  | pub struct objc_object {
  |            ^^^^^^^^^^^
note: required because it appears within the type `AnyObject`
 --> $WORKSPACE/crates/objc2/src/runtime/mod.rs
  |
  | pub struct AnyObject(ffi::objc_object);
  |            ^^^^^^^^^
note: required because it appears within the type `NSObject`
 --> $WORKSPACE/crates/objc2/src/runtime/nsobject.rs
  |
  | pub struct NSObject {
  |            ^^^^^^^^
  = note: required for `dyn NSObjectProtocol + Send` to implement `ImplementedBy<NSObject>`
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>` cannot be shared between threads safely
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSObjectProtocol + Sync> = ProtocolObject::from_ref(&*obj);
  |                                                           ------------------------ ^^^^^ `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>` cannot be shared between threads safely
  |                                                           |
  |                                                           required by a bound introduced by this call
  |
  = help: within `NSObject`, the trait `Sync` is not implemented for `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>`, which is required by `dyn NSObjectProtocol + Sync: ImplementedBy<NSObject>`
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required because it appears within the type `objc_object`
 --> $WORKSPACE/crates/objc-sys/src/object.rs
  |
  | pub struct objc_object {
  |            ^^^^^^^^^^^
note: required because it appears within the type `AnyObject`
 --> $WORKSPACE/crates/objc2/src/runtime/mod.rs
  |
  | pub struct AnyObject(ffi::objc_object);
  |            ^^^^^^^^^
note: required because it appears within the type `NSObject`
 --> $WORKSPACE/crates/objc2/src/runtime/nsobject.rs
  |
  | pub struct NSObject {
  |            ^^^^^^^^
  = note: required for `dyn NSObjectProtocol + Sync` to implement `ImplementedBy<NSObject>`
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>` cannot be shared between threads safely
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSObjectProtocol + Send + Sync> = ProtocolObject::from_ref(&*obj);
  |                                                                  ------------------------ ^^^^^ `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>` cannot be shared between threads safely
  |                                                                  |
  |                                                                  required by a bound introduced by this call
  |
  = help: within `NSObject`, the trait `Sync` is not implemented for `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>`, which is required by `dyn NSObjectProtocol + Send + Sync: ImplementedBy<NSObject>`
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required because it appears within the type `objc_object`
 --> $WORKSPACE/crates/objc-sys/src/object.rs
  |
  | pub struct objc_object {
  |            ^^^^^^^^^^^
note: required because it appears within the type `AnyObject`
 --> $WORKSPACE/crates/objc2/src/runtime/mod.rs
  |
  | pub struct AnyObject(ffi::objc_object);
  |            ^^^^^^^^^
note: required because it appears within the type `NSObject`
 --> $WORKSPACE/crates/objc2/src/runtime/nsobject.rs
  |
  | pub struct NSObject {
  |            ^^^^^^^^
  = note: required for `dyn NSObjectProtocol + Send + Sync` to implement `ImplementedBy<NSObject>`
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: `*const UnsafeCell<()>` cannot be sent between threads safely
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSObjectProtocol + Send + Sync> = ProtocolObject::from_ref(&*obj);
  |                                                                  ------------------------ ^^^^^ `*const UnsafeCell<()>` cannot be sent between threads safely
  |                                                                  |
  |                                                                  required by a bound introduced by this call
  |
  = help: within `NSObject`, the trait `Send` is not implemented for `*const UnsafeCell<()>`, which is required by `dyn NSObjectProtocol + Send + Sync: ImplementedBy<NSObject>`
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
  = note: required because it appears within the type `(*const UnsafeCell<()>, PhantomPinned)`
note: required because it appears within the type `PhantomData<(*const UnsafeCell<()>, PhantomPinned)>`
 --> $RUST/core/src/marker.rs
  |
  | pub struct PhantomData<T: ?Sized>;
  |            ^^^^^^^^^^^
note: required because it appears within the type `UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>`
 --> $RUST/core/src/cell.rs
  |
  | pub struct UnsafeCell<T: ?Sized> {
  |            ^^^^^^^^^^
note: required because it appears within the type `objc_object`
 --> $WORKSPACE/crates/objc-sys/src/object.rs
  |
  | pub struct objc_object {
  |            ^^^^^^^^^^^
note: required because it appears within the type `AnyObject`
 --> $WORKSPACE/crates/objc2/src/runtime/mod.rs
  |
  | pub struct AnyObject(ffi::objc_object);
  |            ^^^^^^^^^
note: required because it appears within the type `NSObject`
 --> $WORKSPACE/crates/objc2/src/runtime/nsobject.rs
  |
  | pub struct NSObject {
  |            ^^^^^^^^
  = note: required for `dyn NSObjectProtocol + Send + Sync` to implement `ImplementedBy<NSObject>`
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: the trait bound `NSObject: NSCopying` is not satisfied
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSCopying> = ProtocolObject::from_ref(&*obj);
  |                                             ------------------------ ^^^^^ the trait `NSCopying` is not implemented for `NSObject`, which is required by `dyn NSCopying: ImplementedBy<NSObject>`
  |                                             |
  |                                             required by a bound introduced by this call
  |
  = help: the following other types implement trait `NSCopying`:
            NSArray<ObjectType>
            NSCountedSet<ObjectType>
            NSDictionary<KeyType, ObjectType>
            NSError
            NSMutableArray<ObjectType>
            NSMutableDictionary<KeyType, ObjectType>
            NSMutableSet<ObjectType>
            NSMutableString
          and $N others
  = note: required for `dyn NSCopying` to implement `ImplementedBy<NSObject>`
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`

error[E0277]: the trait bound `dyn NSCopying + Send: ImplementedBy<NSObject>` is not satisfied
 --> ui/protocol_object_only_protocols.rs
  |
  |     let _: &ProtocolObject<dyn NSCopying + Send> = ProtocolObject::from_ref(&*obj);
  |                                                    ------------------------ ^^^^^ the trait `ImplementedBy<NSObject>` is not implemented for `dyn NSCopying + Send`
  |                                                    |
  |                                                    required by a bound introduced by this call
  |
  = help: the following other types implement trait `ImplementedBy<T>`:
            (dyn NSCoding + 'static)
            (dyn NSCopying + 'static)
            (dyn NSDiscardableContent + 'static)
            (dyn NSFastEnumeration + 'static)
            (dyn NSMutableCopying + 'static)
            (dyn NSObjectProtocol + 'static)
            (dyn NSObjectProtocol + Send + 'static)
            (dyn NSObjectProtocol + Send + Sync + 'static)
          and $N others
note: required by a bound in `ProtocolObject::<P>::from_ref`
 --> $WORKSPACE/crates/objc2/src/runtime/protocol_object.rs
  |
  |     pub fn from_ref<T: ?Sized + Message>(obj: &T) -> &Self
  |            -------- required by a bound in this associated function
  |     where
  |         P: ImplementedBy<T>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `ProtocolObject::<P>::from_ref`
