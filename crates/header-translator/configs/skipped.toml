# List of frameworks that are not mapped by us, and basic reasoning as to why.
#
# Feel free to open an issue if you think we should map one of these.

Accelerate = "Very C-centric, hard for us to map" # NOTE: vDSP_translate requires x86, !x86_64
Hypervisor = "Very low-level, consider crates like `applevisor` instead"
Kerberos = "Too low-level"
Kernel = "Too low-level"
PCSC = "Too low-level, consider crates like `pcsc` instead"
Matter = "Mostly available [here](https://github.com/project-chip/connectedhomeip)"

ForceFeedback = "Very C-centric and old"
GSS = "Very C-centric and old"
OpenAL = "Very C-centric, use newer Audio frameworks instead"
OpenCL = "Very C-centric and old"
Ruby = "Very C-centric and old"
Tcl = "Very C-centric and old"
Tk = "Very C-centric and old"
TWAIN = "Very C-centric and old"
vecLib = "Very C-centric and old"
VideoDecodeAcceleration = "Very C-centric and old" # requires !swift
vmnet = "Very C-centric and old"

DriverKit = "Uses C++ classes"

# AGL = "OpenGL-specific, use Metal instead" # Removed in newer SDKs
GLKit = "OpenGL-specific, use Metal instead"
GLUT = "OpenGL-specific, use Metal instead"
OpenGL = "OpenGL-specific, use Metal instead"
OpenGLES = "OpenGL-specific, use Metal instead"

ActivityKit = "Swift-only"
AdAttributionKit = "Swift-only"
AlarmKit = "Mostly Swift-only"
AppIntents = "Swift-only"
Assignables = "Swift-only"
AutomatedDeviceEnrollment = "Swift-only"
CarKey = "Swift-only" # Also requires special entitlement
Charts = "Swift-only"
Combine = "Swift-only"
ContactProvider = "Mostly Swift-only"
CoreHID = "Swift-only"
CoreTransferable = "Swift-only"
CreateML = "Swift-only"
CreateMLComponents = "Swift-only"
CryptoKit = "Swift-only"
DeclaredAgeRange = "Swift-only"
DeveloperToolsSupport = "Swift-only"
DeviceActivity = "Swift-only"
DockKit = "Swift-only"
EnergyKit = "Swift-only"
ExtensionFoundation = "Swift-only"
FamilyControls = "Swift-only"
FinanceKit = "Swift-only"
FinanceKitUI = "Swift-only"
FoundationModels = "Swift-only"
GeoToolbox = "Swift-only"
GroupActivities = "Swift-only"
IdentityDocumentServices = "Swift-only"
IdentityDocumentServicesUI = "Swift-only"
ImagePlayground = "Swift-only"
ImmersiveMediaSupport = "Swift-only"
JournalingSuggestions = "Swift-only"
LightweightCodeRequirements = "Swift-only"
LiveCommunicationKit = "Swift-only"
LockedCameraCapture = "Swift-only"
ManagedApp = "Swift-only"
ManagedAppDistribution = "Swift-only"
ManagedSettings = "Swift-only"
ManagedSettingsUI = "Swift-only"
MarketplaceKit = "Swift-only"
MatterSupport = "Swift-only"
MusicKit = "Swift-only"
PaperKit = "Swift-only"
PermissionKit = "Swift-only"
ProximityReader = "Swift-only"
RealityFoundation = "Swift-only"
RealityKit = "Swift-only"
RelevanceKit = "Swift-only"
RoomPlan = "Swift-only"
SecureElementCredential = "Swift-only"
SwiftData = "Swift-only"
SwiftUI = "Swift-only"
SwiftUICore = "Swift-only"
TabletopKit = "Swift-only"
TabularData = "Swift-only"
TelephonyMessagingKit = "Swift-only"
TipKit = "Swift-only"
Translation = "Swift-only"
TranslationUIProvider = "Swift-only"
VisionEntitlementServices = "Mostly Swift-only"
VisionKit = "Swift-only"
VisualIntelligence = "Swift-only"
WeatherKit = "Swift-only"
WidgetKit = "Mostly Swift-only"
WiFiAware = "Swift-only"
WirelessInsights = "Swift-only"
WorkoutKit = "Swift-only"

AppleScriptKit = "Basically empty nowadays" # requires !swift
AppleScriptObjC = "Basically empty nowadays"
Cocoa = "Basically empty nowadays, use AppKit"
CoreDisplay = "Basically empty"
JavaNativeFoundation = "Basically empty"
KernelManagement = "Basically empty"
LDAP = "Basically empty" # requires !swift
Message = "Basically empty"
ProximityReaderStub = "Basically empty"
QTKit = "No headers present in Xcode's SDK"
StickerFoundation = "Basically empty"
StickerKit = "Basically empty"
System = "Deprecated wrapper over libSystem.dylib"
MetalPerformancePrimitives = "Header-only framework (no symbols)"

# Deprecated before macOS 10.12 (Rust's minimum supported macOS version)
AudioVideoBridging = "Deprecated, use AVKit/AVFoundation instead (maybe?)"
AddressBook        = "Deprecated, use Contacts instead"
AddressBookUI      = "Deprecated, use Contacts instead"
# -> `objc_method_family` means we should class.ABNewPersonViewController.methods.newPersonViewDelegate.skipped = true
AssetsLibrary      = "Deprecated, use PhotoKit instead"
DirectoryService   = "Deprecated, use OpenDirectory instead"
Twitter            = "Deprecated, use Social instead" # requires !swift
AudioUnit          = "Deprecated, use AudioToolbox instead"
SyncServices       = "Deprecated" # requires !swift
InstantMessage     = "Deprecated in macOS 10.9" # requires !swift
InstallerPlugins   = "Deprecated" # requires !swift
DiscRecording      = "Deprecated, use AVKit/AVFoundation instead"
DiscRecordingUI    = "Deprecated, use AVKit/AVFoundation instead" # requires !macabi
DVDPlayback        = "Deprecated, use AVKit/AVFoundation instead"
MobileCoreServices = "Deprecated, use CoreServices + UniformTypeIdentifiers instead"
ICADevices         = "Deprecated, use ImageCaptureCore instead"
MediaLibrary       = "Deprecated, use PhotoKit instead"
iAd                = "Disabled on server side, use AdServices instead"
NetFS              = "Deprecated, use macFUSE or FSKit instead (probably)"

JavaRuntimeSupport = "Probably not really interesting."
CalendarStore = "Very deprecated" # requires !swift
CoreMIDIServer = "Very deprecated"

Network = "TODO, see [#646](https://github.com/madsmtm/objc2/issues/646)"
DeviceDiscoveryUI = "Needs Network first"

BrowserKit = "TODO"
SecurityUI = "TODO"
GameSave = "TODO"
TouchControls = "TODO"

MeshNetFramework = "Weirdly incomplete"
