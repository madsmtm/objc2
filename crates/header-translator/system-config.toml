# Fake data
framework = "System"
crate = "objc2-system"
required-dependencies = []
macos = "10.0"
maccatalyst = "13.0"
ios = "2.0"
tvos = "9.0"
watchos = "2.0"
visionos = "1.0"
gnustep = true

# Both a protocol and a class, so we use Swift's naming scheme
protocol.NSObject.renamed = "NSObjectProtocol"

# Return type `oneway void`
class.NSObject.methods.release.skipped = true

# TODO: Move these
# `ns_consumed`, `cf_consumed` and `os_consumed`
fn.CFAutorelease.skipped = true
fn.IOServiceGetMatchingService.skipped = true
fn.IOServiceGetMatchingServices.skipped = true
fn.IOServiceAddMatchingNotification.skipped = true
fn.CVOpenGLBufferRelease.skipped = true
fn.CVDisplayLinkRelease.skipped = true
fn.CVOpenGLBufferPoolRelease.skipped = true
fn.CVOpenGLTextureRelease.skipped = true
fn.CVPixelBufferPoolRelease.skipped = true
fn.CVPixelBufferRelease.skipped = true
fn.CVOpenGLTextureCacheRelease.skipped = true
fn.CVBufferRelease.skipped = true
# + a few methods from DriverKit.framework and Kernel.framework, but those
# are written in C++, so we're not going to ever handle them anyhow.

# `objc_method_family`
# TODO: Move this
class.ABNewPersonViewController.methods.newPersonViewDelegate.skipped = true
