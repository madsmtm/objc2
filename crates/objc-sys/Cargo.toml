[package]
name = "objc-sys"
# Remember to update `html_root_url` in lib.rs, the `links` key, and the
# exception function name.
#
# Also, beware of using pre-release versions here, since because of the
# `links` key, two pre-releases requested with `=...` are incompatible.
version = "0.3.5"
authors = ["Mads Marquart <mads@marquart.dk>"]
edition = "2021"
rust-version = "1.60"

description = "Raw bindings to the Objective-C runtime and ABI"
keywords = ["objective-c", "macos", "ios", "objc_msgSend", "sys"]
categories = [
    "external-ffi-bindings",
    # "no_std" # TODO
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
documentation = "https://docs.rs/objc-sys/"
license = "MIT"

readme = "README.md"

# Downstream users can customize the linking to libobjc!
# See https://doc.rust-lang.org/cargo/reference/build-scripts.html#overriding-build-scripts
links = "objc_0_3"
build = "build.rs"

[lints]
workspace = true

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc"]
alloc = []

# Deprecated; this is the default on Apple platforms, and not applicable on other platforms.
apple = []

# Link to GNUStep's libobjc2
gnustep-1-7 = []
gnustep-1-8 = ["gnustep-1-7"]
gnustep-1-9 = ["gnustep-1-8"]
gnustep-2-0 = ["gnustep-1-9"]
gnustep-2-1 = ["gnustep-2-0"]

# Link to Microsoft's libobjc2
unstable-winobjc = ["gnustep-1-8"]

# Link to ObjFW
unstable-objfw = []

# Use nightly c_unwind feature
unstable-c-unwind = []

# Private
unstable-exception = ["cc"]

[build-dependencies]
cc = { version = "1.0.80", optional = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "x86_64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "x86_64-unknown-linux-gnu",
    "i686-unknown-linux-gnu",
]

[package.metadata.release]
shared-version = false
tag-prefix = "objc-sys"
enable-features = []
