[class.NSObject.methods]
# Uses NS_REPLACES_RECEIVER
awakeAfterUsingCoder = { skipped = true }

[class.NSKeyedUnarchiverDelegate.methods]
# Uses NS_RELEASES_ARGUMENT and NS_RETURNS_RETAINED
unarchiver_didDecodeObject = { skipped = true }

[class.NSString.methods]
new = { unsafe = false }
# Assuming that (non-)nullability is properly set
stringByAppendingString = { unsafe = false }
stringByAppendingPathComponent = { unsafe = false }
# Assuming `NSStringEncoding` can be made safe
lengthOfBytesUsingEncoding = { unsafe = false }

[class.NSString.properties]
length = { unsafe = false }
# Safe to call, but the returned pointer may not be safe to use
UTF8String = { unsafe = false }

[class.NSMutableString.methods]
new = { unsafe = false }
initWithString = { unsafe = false }
# "appendString:" = { unsafe = false, mutable = true }
# "setString:" = { unsafe = false, mutable = true }

[class.NSBlockOperation.properties]
# Uses `NSArray<void (^)(void)>`, which is difficult to handle
executionBlocks = { skipped = true }

# These use `Class<NSItemProvider...>`, which is unsupported
[class.NSItemProvider.methods]
registerObjectOfClass_visibility_loadHandler = { skipped = true }
canLoadObjectOfClass = { skipped = true }
loadObjectOfClass_completionHandler = { skipped = true }

# These use `SomeObject * __strong *`, which is unsupported
[class.NSNetService.methods]
getInputStream_outputStream = { skipped = true }
[class.NSPropertyListSerialization.methods]
dataFromPropertyList_format_errorDescription = { skipped = true }
propertyListFromData_mutabilityOption_format_errorDescription = { skipped = true }

# Has `error:` parameter, but returns NSInteger (where 0 means error)
[class.NSJSONSerialization.methods.writeJSONObject_toStream_options_error]
skipped = true
[class.NSPropertyListSerialization.methods.writePropertyList_toStream_format_options_error]
skipped = true

# Not supported on clang 11.0.0
[class.NSBundle.methods.localizedAttributedStringForKey_value_table]
skipped = true
