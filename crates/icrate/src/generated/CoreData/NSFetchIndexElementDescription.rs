//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSFetchIndexElementType {
        NSFetchIndexElementTypeBinary = 0,
        NSFetchIndexElementTypeRTree = 1,
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSFetchIndexElementDescription;

    unsafe impl ClassType for NSFetchIndexElementDescription {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSFetchIndexElementDescription {
        #[method_id(@__retain_semantics Init initWithProperty:collationType:)]
        pub unsafe fn initWithProperty_collationType(
            this: Option<Allocated<Self>>,
            property: &NSPropertyDescription,
            collationType: NSFetchIndexElementType,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other property)]
        pub unsafe fn property(&self) -> Option<Id<NSPropertyDescription, Shared>>;

        #[method_id(@__retain_semantics Other propertyName)]
        pub unsafe fn propertyName(&self) -> Option<Id<NSString, Shared>>;

        #[method(collationType)]
        pub unsafe fn collationType(&self) -> NSFetchIndexElementType;

        #[method(setCollationType:)]
        pub unsafe fn setCollationType(&self, collationType: NSFetchIndexElementType);

        #[method(isAscending)]
        pub unsafe fn isAscending(&self) -> bool;

        #[method(setAscending:)]
        pub unsafe fn setAscending(&self, ascending: bool);

        #[method_id(@__retain_semantics Other indexDescription)]
        pub unsafe fn indexDescription(&self) -> Option<Id<NSFetchIndexDescription, Shared>>;
    }
);
