//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug)]
    pub struct NSBatchUpdateRequest;

    unsafe impl ClassType for NSBatchUpdateRequest {
        type Super = NSPersistentStoreRequest;
    }
);

extern_methods!(
    unsafe impl NSBatchUpdateRequest {
        #[method_id(@__retain_semantics Other batchUpdateRequestWithEntityName:)]
        pub unsafe fn batchUpdateRequestWithEntityName(entityName: &NSString) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init initWithEntityName:)]
        pub unsafe fn initWithEntityName(
            this: Option<Allocated<Self>>,
            entityName: &NSString,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init initWithEntity:)]
        pub unsafe fn initWithEntity(
            this: Option<Allocated<Self>>,
            entity: &NSEntityDescription,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other entityName)]
        pub unsafe fn entityName(&self) -> Id<NSString, Shared>;

        #[method_id(@__retain_semantics Other entity)]
        pub unsafe fn entity(&self) -> Id<NSEntityDescription, Shared>;

        #[method_id(@__retain_semantics Other predicate)]
        pub unsafe fn predicate(&self) -> Option<Id<NSPredicate, Shared>>;

        #[method(setPredicate:)]
        pub unsafe fn setPredicate(&self, predicate: Option<&NSPredicate>);

        #[method(includesSubentities)]
        pub unsafe fn includesSubentities(&self) -> bool;

        #[method(setIncludesSubentities:)]
        pub unsafe fn setIncludesSubentities(&self, includesSubentities: bool);

        #[method(resultType)]
        pub unsafe fn resultType(&self) -> NSBatchUpdateRequestResultType;

        #[method(setResultType:)]
        pub unsafe fn setResultType(&self, resultType: NSBatchUpdateRequestResultType);

        #[method_id(@__retain_semantics Other propertiesToUpdate)]
        pub unsafe fn propertiesToUpdate(&self) -> Option<Id<NSDictionary, Shared>>;

        #[method(setPropertiesToUpdate:)]
        pub unsafe fn setPropertiesToUpdate(&self, propertiesToUpdate: Option<&NSDictionary>);
    }
);
