//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSAttributeType = NSUInteger;
pub const NSUndefinedAttributeType: NSAttributeType = 0;
pub const NSInteger16AttributeType: NSAttributeType = 100;
pub const NSInteger32AttributeType: NSAttributeType = 200;
pub const NSInteger64AttributeType: NSAttributeType = 300;
pub const NSDecimalAttributeType: NSAttributeType = 400;
pub const NSDoubleAttributeType: NSAttributeType = 500;
pub const NSFloatAttributeType: NSAttributeType = 600;
pub const NSStringAttributeType: NSAttributeType = 700;
pub const NSBooleanAttributeType: NSAttributeType = 800;
pub const NSDateAttributeType: NSAttributeType = 900;
pub const NSBinaryDataAttributeType: NSAttributeType = 1000;
pub const NSUUIDAttributeType: NSAttributeType = 1100;
pub const NSURIAttributeType: NSAttributeType = 1200;
pub const NSTransformableAttributeType: NSAttributeType = 1800;
pub const NSObjectIDAttributeType: NSAttributeType = 2000;

extern_class!(
    #[derive(Debug)]
    pub struct NSAttributeDescription;

    unsafe impl ClassType for NSAttributeDescription {
        type Super = NSPropertyDescription;
    }
);

extern_methods!(
    unsafe impl NSAttributeDescription {
        #[method(attributeType)]
        pub unsafe fn attributeType(&self) -> NSAttributeType;

        #[method(setAttributeType:)]
        pub unsafe fn setAttributeType(&self, attributeType: NSAttributeType);

        #[method_id(@__retain_semantics Other attributeValueClassName)]
        pub unsafe fn attributeValueClassName(&self) -> Option<Id<NSString, Shared>>;

        #[method(setAttributeValueClassName:)]
        pub unsafe fn setAttributeValueClassName(&self, attributeValueClassName: Option<&NSString>);

        #[method_id(@__retain_semantics Other defaultValue)]
        pub unsafe fn defaultValue(&self) -> Option<Id<Object, Shared>>;

        #[method(setDefaultValue:)]
        pub unsafe fn setDefaultValue(&self, defaultValue: Option<&Object>);

        #[method_id(@__retain_semantics Other versionHash)]
        pub unsafe fn versionHash(&self) -> Id<NSData, Shared>;

        #[method_id(@__retain_semantics Other valueTransformerName)]
        pub unsafe fn valueTransformerName(&self) -> Option<Id<NSString, Shared>>;

        #[method(setValueTransformerName:)]
        pub unsafe fn setValueTransformerName(&self, valueTransformerName: Option<&NSString>);

        #[method(allowsExternalBinaryDataStorage)]
        pub unsafe fn allowsExternalBinaryDataStorage(&self) -> bool;

        #[method(setAllowsExternalBinaryDataStorage:)]
        pub unsafe fn setAllowsExternalBinaryDataStorage(
            &self,
            allowsExternalBinaryDataStorage: bool,
        );

        #[method(preservesValueInHistoryOnDeletion)]
        pub unsafe fn preservesValueInHistoryOnDeletion(&self) -> bool;

        #[method(setPreservesValueInHistoryOnDeletion:)]
        pub unsafe fn setPreservesValueInHistoryOnDeletion(
            &self,
            preservesValueInHistoryOnDeletion: bool,
        );

        #[method(allowsCloudEncryption)]
        pub unsafe fn allowsCloudEncryption(&self) -> bool;

        #[method(setAllowsCloudEncryption:)]
        pub unsafe fn setAllowsCloudEncryption(&self, allowsCloudEncryption: bool);
    }
);
