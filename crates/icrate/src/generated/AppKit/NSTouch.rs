//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSTouchPhase = NSUInteger;
pub const NSTouchPhaseBegan: NSTouchPhase = 1 << 0;
pub const NSTouchPhaseMoved: NSTouchPhase = 1 << 1;
pub const NSTouchPhaseStationary: NSTouchPhase = 1 << 2;
pub const NSTouchPhaseEnded: NSTouchPhase = 1 << 3;
pub const NSTouchPhaseCancelled: NSTouchPhase = 1 << 4;
pub const NSTouchPhaseTouching: NSTouchPhase =
    NSTouchPhaseBegan | NSTouchPhaseMoved | NSTouchPhaseStationary;
pub const NSTouchPhaseAny: NSTouchPhase = 18446744073709551615;

pub type NSTouchType = NSInteger;
pub const NSTouchTypeDirect: NSTouchType = 0;
pub const NSTouchTypeIndirect: NSTouchType = 1;

pub type NSTouchTypeMask = NSUInteger;
pub const NSTouchTypeMaskDirect: NSTouchTypeMask = 1 << NSTouchTypeDirect;
pub const NSTouchTypeMaskIndirect: NSTouchTypeMask = 1 << NSTouchTypeIndirect;

extern_class!(
    #[derive(Debug)]
    pub struct NSTouch;

    unsafe impl ClassType for NSTouch {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSTouch {
        #[method_id(@__retain_semantics Other identity)]
        pub unsafe fn identity(&self) -> Id<TodoProtocols, Shared>;

        #[method(phase)]
        pub unsafe fn phase(&self) -> NSTouchPhase;

        #[method(normalizedPosition)]
        pub unsafe fn normalizedPosition(&self) -> NSPoint;

        #[method(isResting)]
        pub unsafe fn isResting(&self) -> bool;

        #[method_id(@__retain_semantics Other device)]
        pub unsafe fn device(&self) -> Option<Id<Object, Shared>>;

        #[method(deviceSize)]
        pub unsafe fn deviceSize(&self) -> NSSize;
    }
);

extern_methods!(
    /// NSTouchBar
    unsafe impl NSTouch {
        #[method(type)]
        pub unsafe fn type_(&self) -> NSTouchType;

        #[method(locationInView:)]
        pub unsafe fn locationInView(&self, view: Option<&NSView>) -> NSPoint;

        #[method(previousLocationInView:)]
        pub unsafe fn previousLocationInView(&self, view: Option<&NSView>) -> NSPoint;
    }
);
