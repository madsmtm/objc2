//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSEventType = NSUInteger;
pub const NSEventTypeLeftMouseDown: NSEventType = 1;
pub const NSEventTypeLeftMouseUp: NSEventType = 2;
pub const NSEventTypeRightMouseDown: NSEventType = 3;
pub const NSEventTypeRightMouseUp: NSEventType = 4;
pub const NSEventTypeMouseMoved: NSEventType = 5;
pub const NSEventTypeLeftMouseDragged: NSEventType = 6;
pub const NSEventTypeRightMouseDragged: NSEventType = 7;
pub const NSEventTypeMouseEntered: NSEventType = 8;
pub const NSEventTypeMouseExited: NSEventType = 9;
pub const NSEventTypeKeyDown: NSEventType = 10;
pub const NSEventTypeKeyUp: NSEventType = 11;
pub const NSEventTypeFlagsChanged: NSEventType = 12;
pub const NSEventTypeAppKitDefined: NSEventType = 13;
pub const NSEventTypeSystemDefined: NSEventType = 14;
pub const NSEventTypeApplicationDefined: NSEventType = 15;
pub const NSEventTypePeriodic: NSEventType = 16;
pub const NSEventTypeCursorUpdate: NSEventType = 17;
pub const NSEventTypeScrollWheel: NSEventType = 22;
pub const NSEventTypeTabletPoint: NSEventType = 23;
pub const NSEventTypeTabletProximity: NSEventType = 24;
pub const NSEventTypeOtherMouseDown: NSEventType = 25;
pub const NSEventTypeOtherMouseUp: NSEventType = 26;
pub const NSEventTypeOtherMouseDragged: NSEventType = 27;
pub const NSEventTypeGesture: NSEventType = 29;
pub const NSEventTypeMagnify: NSEventType = 30;
pub const NSEventTypeSwipe: NSEventType = 31;
pub const NSEventTypeRotate: NSEventType = 18;
pub const NSEventTypeBeginGesture: NSEventType = 19;
pub const NSEventTypeEndGesture: NSEventType = 20;
pub const NSEventTypeSmartMagnify: NSEventType = 32;
pub const NSEventTypeQuickLook: NSEventType = 33;
pub const NSEventTypePressure: NSEventType = 34;
pub const NSEventTypeDirectTouch: NSEventType = 37;
pub const NSEventTypeChangeMode: NSEventType = 38;

pub static NSLeftMouseDown: NSEventType = NSEventTypeLeftMouseDown;

pub static NSLeftMouseUp: NSEventType = NSEventTypeLeftMouseUp;

pub static NSRightMouseDown: NSEventType = NSEventTypeRightMouseDown;

pub static NSRightMouseUp: NSEventType = NSEventTypeRightMouseUp;

pub static NSMouseMoved: NSEventType = NSEventTypeMouseMoved;

pub static NSLeftMouseDragged: NSEventType = NSEventTypeLeftMouseDragged;

pub static NSRightMouseDragged: NSEventType = NSEventTypeRightMouseDragged;

pub static NSMouseEntered: NSEventType = NSEventTypeMouseEntered;

pub static NSMouseExited: NSEventType = NSEventTypeMouseExited;

pub static NSKeyDown: NSEventType = NSEventTypeKeyDown;

pub static NSKeyUp: NSEventType = NSEventTypeKeyUp;

pub static NSFlagsChanged: NSEventType = NSEventTypeFlagsChanged;

pub static NSAppKitDefined: NSEventType = NSEventTypeAppKitDefined;

pub static NSSystemDefined: NSEventType = NSEventTypeSystemDefined;

pub static NSApplicationDefined: NSEventType = NSEventTypeApplicationDefined;

pub static NSPeriodic: NSEventType = NSEventTypePeriodic;

pub static NSCursorUpdate: NSEventType = NSEventTypeCursorUpdate;

pub static NSScrollWheel: NSEventType = NSEventTypeScrollWheel;

pub static NSTabletPoint: NSEventType = NSEventTypeTabletPoint;

pub static NSTabletProximity: NSEventType = NSEventTypeTabletProximity;

pub static NSOtherMouseDown: NSEventType = NSEventTypeOtherMouseDown;

pub static NSOtherMouseUp: NSEventType = NSEventTypeOtherMouseUp;

pub static NSOtherMouseDragged: NSEventType = NSEventTypeOtherMouseDragged;

pub type NSEventMask = c_ulonglong;
pub const NSEventMaskLeftMouseDown: NSEventMask = 1 << NSEventTypeLeftMouseDown;
pub const NSEventMaskLeftMouseUp: NSEventMask = 1 << NSEventTypeLeftMouseUp;
pub const NSEventMaskRightMouseDown: NSEventMask = 1 << NSEventTypeRightMouseDown;
pub const NSEventMaskRightMouseUp: NSEventMask = 1 << NSEventTypeRightMouseUp;
pub const NSEventMaskMouseMoved: NSEventMask = 1 << NSEventTypeMouseMoved;
pub const NSEventMaskLeftMouseDragged: NSEventMask = 1 << NSEventTypeLeftMouseDragged;
pub const NSEventMaskRightMouseDragged: NSEventMask = 1 << NSEventTypeRightMouseDragged;
pub const NSEventMaskMouseEntered: NSEventMask = 1 << NSEventTypeMouseEntered;
pub const NSEventMaskMouseExited: NSEventMask = 1 << NSEventTypeMouseExited;
pub const NSEventMaskKeyDown: NSEventMask = 1 << NSEventTypeKeyDown;
pub const NSEventMaskKeyUp: NSEventMask = 1 << NSEventTypeKeyUp;
pub const NSEventMaskFlagsChanged: NSEventMask = 1 << NSEventTypeFlagsChanged;
pub const NSEventMaskAppKitDefined: NSEventMask = 1 << NSEventTypeAppKitDefined;
pub const NSEventMaskSystemDefined: NSEventMask = 1 << NSEventTypeSystemDefined;
pub const NSEventMaskApplicationDefined: NSEventMask = 1 << NSEventTypeApplicationDefined;
pub const NSEventMaskPeriodic: NSEventMask = 1 << NSEventTypePeriodic;
pub const NSEventMaskCursorUpdate: NSEventMask = 1 << NSEventTypeCursorUpdate;
pub const NSEventMaskScrollWheel: NSEventMask = 1 << NSEventTypeScrollWheel;
pub const NSEventMaskTabletPoint: NSEventMask = 1 << NSEventTypeTabletPoint;
pub const NSEventMaskTabletProximity: NSEventMask = 1 << NSEventTypeTabletProximity;
pub const NSEventMaskOtherMouseDown: NSEventMask = 1 << NSEventTypeOtherMouseDown;
pub const NSEventMaskOtherMouseUp: NSEventMask = 1 << NSEventTypeOtherMouseUp;
pub const NSEventMaskOtherMouseDragged: NSEventMask = 1 << NSEventTypeOtherMouseDragged;
pub const NSEventMaskGesture: NSEventMask = 1 << NSEventTypeGesture;
pub const NSEventMaskMagnify: NSEventMask = 1 << NSEventTypeMagnify;
pub const NSEventMaskSwipe: NSEventMask = 1 << NSEventTypeSwipe;
pub const NSEventMaskRotate: NSEventMask = 1 << NSEventTypeRotate;
pub const NSEventMaskBeginGesture: NSEventMask = 1 << NSEventTypeBeginGesture;
pub const NSEventMaskEndGesture: NSEventMask = 1 << NSEventTypeEndGesture;
pub const NSEventMaskSmartMagnify: NSEventMask = 1 << NSEventTypeSmartMagnify;
pub const NSEventMaskPressure: NSEventMask = 1 << NSEventTypePressure;
pub const NSEventMaskDirectTouch: NSEventMask = 1 << NSEventTypeDirectTouch;
pub const NSEventMaskChangeMode: NSEventMask = 1 << NSEventTypeChangeMode;
pub const NSEventMaskAny: NSEventMask = 18446744073709551615;

pub static NSLeftMouseDownMask: NSEventMask = NSEventMaskLeftMouseDown;

pub static NSLeftMouseUpMask: NSEventMask = NSEventMaskLeftMouseUp;

pub static NSRightMouseDownMask: NSEventMask = NSEventMaskRightMouseDown;

pub static NSRightMouseUpMask: NSEventMask = NSEventMaskRightMouseUp;

pub static NSMouseMovedMask: NSEventMask = NSEventMaskMouseMoved;

pub static NSLeftMouseDraggedMask: NSEventMask = NSEventMaskLeftMouseDragged;

pub static NSRightMouseDraggedMask: NSEventMask = NSEventMaskRightMouseDragged;

pub static NSMouseEnteredMask: NSEventMask = NSEventMaskMouseEntered;

pub static NSMouseExitedMask: NSEventMask = NSEventMaskMouseExited;

pub static NSKeyDownMask: NSEventMask = NSEventMaskKeyDown;

pub static NSKeyUpMask: NSEventMask = NSEventMaskKeyUp;

pub static NSFlagsChangedMask: NSEventMask = NSEventMaskFlagsChanged;

pub static NSAppKitDefinedMask: NSEventMask = NSEventMaskAppKitDefined;

pub static NSSystemDefinedMask: NSEventMask = NSEventMaskSystemDefined;

pub static NSApplicationDefinedMask: NSEventMask = NSEventMaskApplicationDefined;

pub static NSPeriodicMask: NSEventMask = NSEventMaskPeriodic;

pub static NSCursorUpdateMask: NSEventMask = NSEventMaskCursorUpdate;

pub static NSScrollWheelMask: NSEventMask = NSEventMaskScrollWheel;

pub static NSTabletPointMask: NSEventMask = NSEventMaskTabletPoint;

pub static NSTabletProximityMask: NSEventMask = NSEventMaskTabletProximity;

pub static NSOtherMouseDownMask: NSEventMask = NSEventMaskOtherMouseDown;

pub static NSOtherMouseUpMask: NSEventMask = NSEventMaskOtherMouseUp;

pub static NSOtherMouseDraggedMask: NSEventMask = NSEventMaskOtherMouseDragged;

pub type NSEventModifierFlags = NSUInteger;
pub const NSEventModifierFlagCapsLock: NSEventModifierFlags = 1 << 16;
pub const NSEventModifierFlagShift: NSEventModifierFlags = 1 << 17;
pub const NSEventModifierFlagControl: NSEventModifierFlags = 1 << 18;
pub const NSEventModifierFlagOption: NSEventModifierFlags = 1 << 19;
pub const NSEventModifierFlagCommand: NSEventModifierFlags = 1 << 20;
pub const NSEventModifierFlagNumericPad: NSEventModifierFlags = 1 << 21;
pub const NSEventModifierFlagHelp: NSEventModifierFlags = 1 << 22;
pub const NSEventModifierFlagFunction: NSEventModifierFlags = 1 << 23;
pub const NSEventModifierFlagDeviceIndependentFlagsMask: NSEventModifierFlags = 0xffff0000;

pub static NSAlphaShiftKeyMask: NSEventModifierFlags = NSEventModifierFlagCapsLock;

pub static NSShiftKeyMask: NSEventModifierFlags = NSEventModifierFlagShift;

pub static NSControlKeyMask: NSEventModifierFlags = NSEventModifierFlagControl;

pub static NSAlternateKeyMask: NSEventModifierFlags = NSEventModifierFlagOption;

pub static NSCommandKeyMask: NSEventModifierFlags = NSEventModifierFlagCommand;

pub static NSNumericPadKeyMask: NSEventModifierFlags = NSEventModifierFlagNumericPad;

pub static NSHelpKeyMask: NSEventModifierFlags = NSEventModifierFlagHelp;

pub static NSFunctionKeyMask: NSEventModifierFlags = NSEventModifierFlagFunction;

pub static NSDeviceIndependentModifierFlagsMask: NSEventModifierFlags =
    NSEventModifierFlagDeviceIndependentFlagsMask;

pub type NSPointingDeviceType = NSUInteger;
pub const NSPointingDeviceTypeUnknown: NSPointingDeviceType = 0;
pub const NSPointingDeviceTypePen: NSPointingDeviceType = 1;
pub const NSPointingDeviceTypeCursor: NSPointingDeviceType = 2;
pub const NSPointingDeviceTypeEraser: NSPointingDeviceType = 3;

pub static NSUnknownPointingDevice: NSPointingDeviceType = NSPointingDeviceTypeUnknown;

pub static NSPenPointingDevice: NSPointingDeviceType = NSPointingDeviceTypePen;

pub static NSCursorPointingDevice: NSPointingDeviceType = NSPointingDeviceTypeCursor;

pub static NSEraserPointingDevice: NSPointingDeviceType = NSPointingDeviceTypeEraser;

pub type NSEventButtonMask = NSUInteger;
pub const NSEventButtonMaskPenTip: NSEventButtonMask = 1;
pub const NSEventButtonMaskPenLowerSide: NSEventButtonMask = 2;
pub const NSEventButtonMaskPenUpperSide: NSEventButtonMask = 4;

pub static NSPenTipMask: NSEventButtonMask = NSEventButtonMaskPenTip;

pub static NSPenLowerSideMask: NSEventButtonMask = NSEventButtonMaskPenLowerSide;

pub static NSPenUpperSideMask: NSEventButtonMask = NSEventButtonMaskPenUpperSide;

pub type NSEventPhase = NSUInteger;
pub const NSEventPhaseNone: NSEventPhase = 0;
pub const NSEventPhaseBegan: NSEventPhase = 0x1 << 0;
pub const NSEventPhaseStationary: NSEventPhase = 0x1 << 1;
pub const NSEventPhaseChanged: NSEventPhase = 0x1 << 2;
pub const NSEventPhaseEnded: NSEventPhase = 0x1 << 3;
pub const NSEventPhaseCancelled: NSEventPhase = 0x1 << 4;
pub const NSEventPhaseMayBegin: NSEventPhase = 0x1 << 5;

pub type NSEventGestureAxis = NSInteger;
pub const NSEventGestureAxisNone: NSEventGestureAxis = 0;
pub const NSEventGestureAxisHorizontal: NSEventGestureAxis = 1;
pub const NSEventGestureAxisVertical: NSEventGestureAxis = 2;

pub type NSEventSwipeTrackingOptions = NSUInteger;
pub const NSEventSwipeTrackingLockDirection: NSEventSwipeTrackingOptions = 0x1 << 0;
pub const NSEventSwipeTrackingClampGestureAmount: NSEventSwipeTrackingOptions = 0x1 << 1;

pub type NSEventSubtype = c_short;
pub const NSEventSubtypeWindowExposed: NSEventSubtype = 0;
pub const NSEventSubtypeApplicationActivated: NSEventSubtype = 1;
pub const NSEventSubtypeApplicationDeactivated: NSEventSubtype = 2;
pub const NSEventSubtypeWindowMoved: NSEventSubtype = 4;
pub const NSEventSubtypeScreenChanged: NSEventSubtype = 8;
pub const NSEventSubtypePowerOff: NSEventSubtype = 1;
pub const NSEventSubtypeMouseEvent: NSEventSubtype = 0;
pub const NSEventSubtypeTabletPoint: NSEventSubtype = 1;
pub const NSEventSubtypeTabletProximity: NSEventSubtype = 2;
pub const NSEventSubtypeTouch: NSEventSubtype = 3;

pub static NSWindowExposedEventType: NSEventSubtype = NSEventSubtypeWindowExposed;

pub static NSApplicationActivatedEventType: NSEventSubtype = NSEventSubtypeApplicationActivated;

pub static NSApplicationDeactivatedEventType: NSEventSubtype = NSEventSubtypeApplicationDeactivated;

pub static NSWindowMovedEventType: NSEventSubtype = NSEventSubtypeWindowMoved;

pub static NSScreenChangedEventType: NSEventSubtype = NSEventSubtypeScreenChanged;

pub static NSAWTEventType: NSEventSubtype = 16;

pub static NSPowerOffEventType: NSEventSubtype = NSEventSubtypePowerOff;

pub static NSMouseEventSubtype: NSEventSubtype = NSEventSubtypeMouseEvent;

pub static NSTabletPointEventSubtype: NSEventSubtype = NSEventSubtypeTabletPoint;

pub static NSTabletProximityEventSubtype: NSEventSubtype = NSEventSubtypeTabletProximity;

pub static NSTouchEventSubtype: NSEventSubtype = NSEventSubtypeTouch;

pub type NSPressureBehavior = NSInteger;
pub const NSPressureBehaviorUnknown: NSPressureBehavior = -1;
pub const NSPressureBehaviorPrimaryDefault: NSPressureBehavior = 0;
pub const NSPressureBehaviorPrimaryClick: NSPressureBehavior = 1;
pub const NSPressureBehaviorPrimaryGeneric: NSPressureBehavior = 2;
pub const NSPressureBehaviorPrimaryAccelerator: NSPressureBehavior = 3;
pub const NSPressureBehaviorPrimaryDeepClick: NSPressureBehavior = 5;
pub const NSPressureBehaviorPrimaryDeepDrag: NSPressureBehavior = 6;

extern_class!(
    #[derive(Debug)]
    pub struct NSEvent;

    unsafe impl ClassType for NSEvent {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSEvent {
        #[method(type)]
        pub unsafe fn type_(&self) -> NSEventType;

        #[method(timestamp)]
        pub unsafe fn timestamp(&self) -> NSTimeInterval;

        #[method_id(@__retain_semantics Other window)]
        pub unsafe fn window(&self) -> Option<Id<NSWindow, Shared>>;

        #[method(windowNumber)]
        pub unsafe fn windowNumber(&self) -> NSInteger;

        #[method_id(@__retain_semantics Other context)]
        pub unsafe fn context(&self) -> Option<Id<NSGraphicsContext, Shared>>;

        #[method(clickCount)]
        pub unsafe fn clickCount(&self) -> NSInteger;

        #[method(buttonNumber)]
        pub unsafe fn buttonNumber(&self) -> NSInteger;

        #[method(eventNumber)]
        pub unsafe fn eventNumber(&self) -> NSInteger;

        #[method(pressure)]
        pub unsafe fn pressure(&self) -> c_float;

        #[method(locationInWindow)]
        pub unsafe fn locationInWindow(&self) -> NSPoint;

        #[method(deltaX)]
        pub unsafe fn deltaX(&self) -> CGFloat;

        #[method(deltaY)]
        pub unsafe fn deltaY(&self) -> CGFloat;

        #[method(deltaZ)]
        pub unsafe fn deltaZ(&self) -> CGFloat;

        #[method(hasPreciseScrollingDeltas)]
        pub unsafe fn hasPreciseScrollingDeltas(&self) -> bool;

        #[method(scrollingDeltaX)]
        pub unsafe fn scrollingDeltaX(&self) -> CGFloat;

        #[method(scrollingDeltaY)]
        pub unsafe fn scrollingDeltaY(&self) -> CGFloat;

        #[method(momentumPhase)]
        pub unsafe fn momentumPhase(&self) -> NSEventPhase;

        #[method(isDirectionInvertedFromDevice)]
        pub unsafe fn isDirectionInvertedFromDevice(&self) -> bool;

        #[method_id(@__retain_semantics Other characters)]
        pub unsafe fn characters(&self) -> Option<Id<NSString, Shared>>;

        #[method_id(@__retain_semantics Other charactersIgnoringModifiers)]
        pub unsafe fn charactersIgnoringModifiers(&self) -> Option<Id<NSString, Shared>>;

        #[method_id(@__retain_semantics Other charactersByApplyingModifiers:)]
        pub unsafe fn charactersByApplyingModifiers(
            &self,
            modifiers: NSEventModifierFlags,
        ) -> Option<Id<NSString, Shared>>;

        #[method(isARepeat)]
        pub unsafe fn isARepeat(&self) -> bool;

        #[method(keyCode)]
        pub unsafe fn keyCode(&self) -> c_ushort;

        #[method(trackingNumber)]
        pub unsafe fn trackingNumber(&self) -> NSInteger;

        #[method(userData)]
        pub unsafe fn userData(&self) -> *mut c_void;

        #[method_id(@__retain_semantics Other trackingArea)]
        pub unsafe fn trackingArea(&self) -> Option<Id<NSTrackingArea, Shared>>;

        #[method(subtype)]
        pub unsafe fn subtype(&self) -> NSEventSubtype;

        #[method(data1)]
        pub unsafe fn data1(&self) -> NSInteger;

        #[method(data2)]
        pub unsafe fn data2(&self) -> NSInteger;

        #[method(eventRef)]
        pub unsafe fn eventRef(&self) -> *mut c_void;

        #[method_id(@__retain_semantics Other eventWithEventRef:)]
        pub unsafe fn eventWithEventRef(eventRef: NonNull<c_void>) -> Option<Id<NSEvent, Shared>>;

        #[method(CGEvent)]
        pub unsafe fn CGEvent(&self) -> CGEventRef;

        #[method_id(@__retain_semantics Other eventWithCGEvent:)]
        pub unsafe fn eventWithCGEvent(cgEvent: CGEventRef) -> Option<Id<NSEvent, Shared>>;

        #[method(isMouseCoalescingEnabled)]
        pub unsafe fn isMouseCoalescingEnabled() -> bool;

        #[method(setMouseCoalescingEnabled:)]
        pub unsafe fn setMouseCoalescingEnabled(mouseCoalescingEnabled: bool);

        #[method(magnification)]
        pub unsafe fn magnification(&self) -> CGFloat;

        #[method(deviceID)]
        pub unsafe fn deviceID(&self) -> NSUInteger;

        #[method(rotation)]
        pub unsafe fn rotation(&self) -> c_float;

        #[method(absoluteX)]
        pub unsafe fn absoluteX(&self) -> NSInteger;

        #[method(absoluteY)]
        pub unsafe fn absoluteY(&self) -> NSInteger;

        #[method(absoluteZ)]
        pub unsafe fn absoluteZ(&self) -> NSInteger;

        #[method(buttonMask)]
        pub unsafe fn buttonMask(&self) -> NSEventButtonMask;

        #[method(tilt)]
        pub unsafe fn tilt(&self) -> NSPoint;

        #[method(tangentialPressure)]
        pub unsafe fn tangentialPressure(&self) -> c_float;

        #[method_id(@__retain_semantics Other vendorDefined)]
        pub unsafe fn vendorDefined(&self) -> Id<Object, Shared>;

        #[method(vendorID)]
        pub unsafe fn vendorID(&self) -> NSUInteger;

        #[method(tabletID)]
        pub unsafe fn tabletID(&self) -> NSUInteger;

        #[method(pointingDeviceID)]
        pub unsafe fn pointingDeviceID(&self) -> NSUInteger;

        #[method(systemTabletID)]
        pub unsafe fn systemTabletID(&self) -> NSUInteger;

        #[method(vendorPointingDeviceType)]
        pub unsafe fn vendorPointingDeviceType(&self) -> NSUInteger;

        #[method(pointingDeviceSerialNumber)]
        pub unsafe fn pointingDeviceSerialNumber(&self) -> NSUInteger;

        #[method(uniqueID)]
        pub unsafe fn uniqueID(&self) -> c_ulonglong;

        #[method(capabilityMask)]
        pub unsafe fn capabilityMask(&self) -> NSUInteger;

        #[method(pointingDeviceType)]
        pub unsafe fn pointingDeviceType(&self) -> NSPointingDeviceType;

        #[method(isEnteringProximity)]
        pub unsafe fn isEnteringProximity(&self) -> bool;

        #[method_id(@__retain_semantics Other touchesMatchingPhase:inView:)]
        pub unsafe fn touchesMatchingPhase_inView(
            &self,
            phase: NSTouchPhase,
            view: Option<&NSView>,
        ) -> Id<NSSet<NSTouch>, Shared>;

        #[method_id(@__retain_semantics Other allTouches)]
        pub unsafe fn allTouches(&self) -> Id<NSSet<NSTouch>, Shared>;

        #[method_id(@__retain_semantics Other touchesForView:)]
        pub unsafe fn touchesForView(&self, view: &NSView) -> Id<NSSet<NSTouch>, Shared>;

        #[method_id(@__retain_semantics Other coalescedTouchesForTouch:)]
        pub unsafe fn coalescedTouchesForTouch(
            &self,
            touch: &NSTouch,
        ) -> Id<NSArray<NSTouch>, Shared>;

        #[method(phase)]
        pub unsafe fn phase(&self) -> NSEventPhase;

        #[method(stage)]
        pub unsafe fn stage(&self) -> NSInteger;

        #[method(stageTransition)]
        pub unsafe fn stageTransition(&self) -> CGFloat;

        #[method(associatedEventsMask)]
        pub unsafe fn associatedEventsMask(&self) -> NSEventMask;

        #[method(pressureBehavior)]
        pub unsafe fn pressureBehavior(&self) -> NSPressureBehavior;

        #[method(isSwipeTrackingFromScrollEventsEnabled)]
        pub unsafe fn isSwipeTrackingFromScrollEventsEnabled() -> bool;

        #[method(trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:)]
        pub unsafe fn trackSwipeEventWithOptions_dampenAmountThresholdMin_max_usingHandler(
            &self,
            options: NSEventSwipeTrackingOptions,
            minDampenThreshold: CGFloat,
            maxDampenThreshold: CGFloat,
            trackingHandler: TodoBlock,
        );

        #[method(startPeriodicEventsAfterDelay:withPeriod:)]
        pub unsafe fn startPeriodicEventsAfterDelay_withPeriod(
            delay: NSTimeInterval,
            period: NSTimeInterval,
        );

        #[method(stopPeriodicEvents)]
        pub unsafe fn stopPeriodicEvents();

        #[method_id(@__retain_semantics Other mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:)]
        pub unsafe fn mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure(
            type_: NSEventType,
            location: NSPoint,
            flags: NSEventModifierFlags,
            time: NSTimeInterval,
            wNum: NSInteger,
            unusedPassNil: Option<&NSGraphicsContext>,
            eNum: NSInteger,
            cNum: NSInteger,
            pressure: c_float,
        ) -> Option<Id<NSEvent, Shared>>;

        #[method_id(@__retain_semantics Other keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:)]
        pub unsafe fn keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode(
            type_: NSEventType,
            location: NSPoint,
            flags: NSEventModifierFlags,
            time: NSTimeInterval,
            wNum: NSInteger,
            unusedPassNil: Option<&NSGraphicsContext>,
            keys: &NSString,
            ukeys: &NSString,
            flag: bool,
            code: c_ushort,
        ) -> Option<Id<NSEvent, Shared>>;

        #[method_id(@__retain_semantics Other enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:)]
        pub unsafe fn enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData(
            type_: NSEventType,
            location: NSPoint,
            flags: NSEventModifierFlags,
            time: NSTimeInterval,
            wNum: NSInteger,
            unusedPassNil: Option<&NSGraphicsContext>,
            eNum: NSInteger,
            tNum: NSInteger,
            data: *mut c_void,
        ) -> Option<Id<NSEvent, Shared>>;

        #[method_id(@__retain_semantics Other otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:)]
        pub unsafe fn otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2(
            type_: NSEventType,
            location: NSPoint,
            flags: NSEventModifierFlags,
            time: NSTimeInterval,
            wNum: NSInteger,
            unusedPassNil: Option<&NSGraphicsContext>,
            subtype: c_short,
            d1: NSInteger,
            d2: NSInteger,
        ) -> Option<Id<NSEvent, Shared>>;

        #[method(mouseLocation)]
        pub unsafe fn mouseLocation() -> NSPoint;

        #[method(pressedMouseButtons)]
        pub unsafe fn pressedMouseButtons() -> NSUInteger;

        #[method(doubleClickInterval)]
        pub unsafe fn doubleClickInterval() -> NSTimeInterval;

        #[method(keyRepeatDelay)]
        pub unsafe fn keyRepeatDelay() -> NSTimeInterval;

        #[method(keyRepeatInterval)]
        pub unsafe fn keyRepeatInterval() -> NSTimeInterval;

        #[method_id(@__retain_semantics Other addGlobalMonitorForEventsMatchingMask:handler:)]
        pub unsafe fn addGlobalMonitorForEventsMatchingMask_handler(
            mask: NSEventMask,
            block: TodoBlock,
        ) -> Option<Id<Object, Shared>>;

        #[method_id(@__retain_semantics Other addLocalMonitorForEventsMatchingMask:handler:)]
        pub unsafe fn addLocalMonitorForEventsMatchingMask_handler(
            mask: NSEventMask,
            block: TodoBlock,
        ) -> Option<Id<Object, Shared>>;

        #[method(removeMonitor:)]
        pub unsafe fn removeMonitor(eventMonitor: &Object);
    }
);

pub const NSUpArrowFunctionKey: c_uint = 0xF700;
pub const NSDownArrowFunctionKey: c_uint = 0xF701;
pub const NSLeftArrowFunctionKey: c_uint = 0xF702;
pub const NSRightArrowFunctionKey: c_uint = 0xF703;
pub const NSF1FunctionKey: c_uint = 0xF704;
pub const NSF2FunctionKey: c_uint = 0xF705;
pub const NSF3FunctionKey: c_uint = 0xF706;
pub const NSF4FunctionKey: c_uint = 0xF707;
pub const NSF5FunctionKey: c_uint = 0xF708;
pub const NSF6FunctionKey: c_uint = 0xF709;
pub const NSF7FunctionKey: c_uint = 0xF70A;
pub const NSF8FunctionKey: c_uint = 0xF70B;
pub const NSF9FunctionKey: c_uint = 0xF70C;
pub const NSF10FunctionKey: c_uint = 0xF70D;
pub const NSF11FunctionKey: c_uint = 0xF70E;
pub const NSF12FunctionKey: c_uint = 0xF70F;
pub const NSF13FunctionKey: c_uint = 0xF710;
pub const NSF14FunctionKey: c_uint = 0xF711;
pub const NSF15FunctionKey: c_uint = 0xF712;
pub const NSF16FunctionKey: c_uint = 0xF713;
pub const NSF17FunctionKey: c_uint = 0xF714;
pub const NSF18FunctionKey: c_uint = 0xF715;
pub const NSF19FunctionKey: c_uint = 0xF716;
pub const NSF20FunctionKey: c_uint = 0xF717;
pub const NSF21FunctionKey: c_uint = 0xF718;
pub const NSF22FunctionKey: c_uint = 0xF719;
pub const NSF23FunctionKey: c_uint = 0xF71A;
pub const NSF24FunctionKey: c_uint = 0xF71B;
pub const NSF25FunctionKey: c_uint = 0xF71C;
pub const NSF26FunctionKey: c_uint = 0xF71D;
pub const NSF27FunctionKey: c_uint = 0xF71E;
pub const NSF28FunctionKey: c_uint = 0xF71F;
pub const NSF29FunctionKey: c_uint = 0xF720;
pub const NSF30FunctionKey: c_uint = 0xF721;
pub const NSF31FunctionKey: c_uint = 0xF722;
pub const NSF32FunctionKey: c_uint = 0xF723;
pub const NSF33FunctionKey: c_uint = 0xF724;
pub const NSF34FunctionKey: c_uint = 0xF725;
pub const NSF35FunctionKey: c_uint = 0xF726;
pub const NSInsertFunctionKey: c_uint = 0xF727;
pub const NSDeleteFunctionKey: c_uint = 0xF728;
pub const NSHomeFunctionKey: c_uint = 0xF729;
pub const NSBeginFunctionKey: c_uint = 0xF72A;
pub const NSEndFunctionKey: c_uint = 0xF72B;
pub const NSPageUpFunctionKey: c_uint = 0xF72C;
pub const NSPageDownFunctionKey: c_uint = 0xF72D;
pub const NSPrintScreenFunctionKey: c_uint = 0xF72E;
pub const NSScrollLockFunctionKey: c_uint = 0xF72F;
pub const NSPauseFunctionKey: c_uint = 0xF730;
pub const NSSysReqFunctionKey: c_uint = 0xF731;
pub const NSBreakFunctionKey: c_uint = 0xF732;
pub const NSResetFunctionKey: c_uint = 0xF733;
pub const NSStopFunctionKey: c_uint = 0xF734;
pub const NSMenuFunctionKey: c_uint = 0xF735;
pub const NSUserFunctionKey: c_uint = 0xF736;
pub const NSSystemFunctionKey: c_uint = 0xF737;
pub const NSPrintFunctionKey: c_uint = 0xF738;
pub const NSClearLineFunctionKey: c_uint = 0xF739;
pub const NSClearDisplayFunctionKey: c_uint = 0xF73A;
pub const NSInsertLineFunctionKey: c_uint = 0xF73B;
pub const NSDeleteLineFunctionKey: c_uint = 0xF73C;
pub const NSInsertCharFunctionKey: c_uint = 0xF73D;
pub const NSDeleteCharFunctionKey: c_uint = 0xF73E;
pub const NSPrevFunctionKey: c_uint = 0xF73F;
pub const NSNextFunctionKey: c_uint = 0xF740;
pub const NSSelectFunctionKey: c_uint = 0xF741;
pub const NSExecuteFunctionKey: c_uint = 0xF742;
pub const NSUndoFunctionKey: c_uint = 0xF743;
pub const NSRedoFunctionKey: c_uint = 0xF744;
pub const NSFindFunctionKey: c_uint = 0xF745;
pub const NSHelpFunctionKey: c_uint = 0xF746;
pub const NSModeSwitchFunctionKey: c_uint = 0xF747;
