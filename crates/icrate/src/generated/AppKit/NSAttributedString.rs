//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;

extern "C" {
    pub static NSFontAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSParagraphStyleAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSForegroundColorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSBackgroundColorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSLigatureAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSKernAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSTrackingAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSStrikethroughStyleAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSUnderlineStyleAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSStrokeColorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSStrokeWidthAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSShadowAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSTextEffectAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSAttachmentAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSLinkAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSBaselineOffsetAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSUnderlineColorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSStrikethroughColorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSObliquenessAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSExpansionAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSWritingDirectionAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSVerticalGlyphFormAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSCursorAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSToolTipAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSMarkedClauseSegmentAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSTextAlternativesAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSSpellingStateAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSSuperscriptAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSGlyphInfoAttributeName: &'static NSAttributedStringKey;
}

pub type NSUnderlineStyle = NSInteger;
pub const NSUnderlineStyleNone: NSUnderlineStyle = 0x00;
pub const NSUnderlineStyleSingle: NSUnderlineStyle = 0x01;
pub const NSUnderlineStyleThick: NSUnderlineStyle = 0x02;
pub const NSUnderlineStyleDouble: NSUnderlineStyle = 0x09;
pub const NSUnderlineStylePatternSolid: NSUnderlineStyle = 0x0000;
pub const NSUnderlineStylePatternDot: NSUnderlineStyle = 0x0100;
pub const NSUnderlineStylePatternDash: NSUnderlineStyle = 0x0200;
pub const NSUnderlineStylePatternDashDot: NSUnderlineStyle = 0x0300;
pub const NSUnderlineStylePatternDashDotDot: NSUnderlineStyle = 0x0400;
pub const NSUnderlineStyleByWord: NSUnderlineStyle = 0x8000;

pub type NSWritingDirectionFormatType = NSInteger;
pub const NSWritingDirectionEmbedding: NSWritingDirectionFormatType = 0 << 1;
pub const NSWritingDirectionOverride: NSWritingDirectionFormatType = 1 << 1;

pub type NSTextEffectStyle = NSString;

extern "C" {
    pub static NSTextEffectLetterpressStyle: &'static NSTextEffectStyle;
}

pub type NSSpellingState = NSInteger;
pub const NSSpellingStateSpellingFlag: NSSpellingState = 1 << 0;
pub const NSSpellingStateGrammarFlag: NSSpellingState = 1 << 1;

extern_methods!(
    /// NSAttributedStringAttributeFixing
    unsafe impl NSMutableAttributedString {
        #[method(fixAttributesInRange:)]
        pub unsafe fn fixAttributesInRange(&self, range: NSRange);

        #[method(fixFontAttributeInRange:)]
        pub unsafe fn fixFontAttributeInRange(&self, range: NSRange);

        #[method(fixParagraphStyleAttributeInRange:)]
        pub unsafe fn fixParagraphStyleAttributeInRange(&self, range: NSRange);

        #[method(fixAttachmentAttributeInRange:)]
        pub unsafe fn fixAttachmentAttributeInRange(&self, range: NSRange);
    }
);

pub type NSAttributedStringDocumentType = NSString;

extern "C" {
    pub static NSPlainTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSRTFTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSRTFDTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSHTMLTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSMacSimpleTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSDocFormatTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSWordMLTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSWebArchiveTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSOfficeOpenXMLTextDocumentType: &'static NSAttributedStringDocumentType;
}

extern "C" {
    pub static NSOpenDocumentTextDocumentType: &'static NSAttributedStringDocumentType;
}

pub type NSTextLayoutSectionKey = NSString;

extern "C" {
    pub static NSTextLayoutSectionOrientation: &'static NSTextLayoutSectionKey;
}

extern "C" {
    pub static NSTextLayoutSectionRange: &'static NSTextLayoutSectionKey;
}

pub type NSTextScalingType = NSInteger;
pub const NSTextScalingStandard: NSTextScalingType = 0;
pub const NSTextScalingiOS: NSTextScalingType = 1;

pub type NSAttributedStringDocumentAttributeKey = NSString;

extern "C" {
    pub static NSDocumentTypeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSConvertedDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCocoaVersionDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSFileTypeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSTitleDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCompanyDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCopyrightDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSSubjectDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSAuthorDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSKeywordsDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCommentDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSEditorDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCreationTimeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSModificationTimeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSManagerDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCategoryDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSAppearanceDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSCharacterEncodingDocumentAttribute:
        &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSDefaultAttributesDocumentAttribute:
        &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSPaperSizeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSLeftMarginDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSRightMarginDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSTopMarginDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSBottomMarginDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSViewSizeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSViewZoomDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSViewModeDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSReadOnlyDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSBackgroundColorDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSHyphenationFactorDocumentAttribute:
        &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSDefaultTabIntervalDocumentAttribute:
        &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSTextLayoutSectionsAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSExcludedElementsDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSTextEncodingNameDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSPrefixSpacesDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSTextScalingDocumentAttribute: &'static NSAttributedStringDocumentAttributeKey;
}

extern "C" {
    pub static NSSourceTextScalingDocumentAttribute:
        &'static NSAttributedStringDocumentAttributeKey;
}

pub type NSAttributedStringDocumentReadingOptionKey = NSString;

extern "C" {
    pub static NSDocumentTypeDocumentOption: &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSDefaultAttributesDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSCharacterEncodingDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSTextEncodingNameDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSBaseURLDocumentOption: &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSTimeoutDocumentOption: &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSWebPreferencesDocumentOption: &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSWebResourceLoadDelegateDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSTextSizeMultiplierDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSFileTypeDocumentOption: &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSTargetTextScalingDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern "C" {
    pub static NSSourceTextScalingDocumentOption:
        &'static NSAttributedStringDocumentReadingOptionKey;
}

extern_methods!(
    /// NSAttributedStringDocumentFormats
    unsafe impl NSAttributedString {
        #[method_id(initWithURL:options:documentAttributes:error:)]
        pub unsafe fn initWithURL_options_documentAttributes_error(
            this: Option<Allocated<Self>>,
            url: &NSURL,
            options: &NSDictionary<NSAttributedStringDocumentReadingOptionKey, Object>,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Result<Id<Self, Shared>, Id<NSError, Shared>>;

        #[method_id(initWithData:options:documentAttributes:error:)]
        pub unsafe fn initWithData_options_documentAttributes_error(
            this: Option<Allocated<Self>>,
            data: &NSData,
            options: &NSDictionary<NSAttributedStringDocumentReadingOptionKey, Object>,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Result<Id<Self, Shared>, Id<NSError, Shared>>;

        #[method_id(dataFromRange:documentAttributes:error:)]
        pub unsafe fn dataFromRange_documentAttributes_error(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Result<Id<NSData, Shared>, Id<NSError, Shared>>;

        #[method_id(fileWrapperFromRange:documentAttributes:error:)]
        pub unsafe fn fileWrapperFromRange_documentAttributes_error(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Result<Id<NSFileWrapper, Shared>, Id<NSError, Shared>>;

        #[method_id(initWithRTF:documentAttributes:)]
        pub unsafe fn initWithRTF_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithRTFD:documentAttributes:)]
        pub unsafe fn initWithRTFD_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithHTML:documentAttributes:)]
        pub unsafe fn initWithHTML_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithHTML:baseURL:documentAttributes:)]
        pub unsafe fn initWithHTML_baseURL_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            base: &NSURL,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithDocFormat:documentAttributes:)]
        pub unsafe fn initWithDocFormat_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithHTML:options:documentAttributes:)]
        pub unsafe fn initWithHTML_options_documentAttributes(
            this: Option<Allocated<Self>>,
            data: &NSData,
            options: &NSDictionary<NSAttributedStringDocumentReadingOptionKey, Object>,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithRTFDFileWrapper:documentAttributes:)]
        pub unsafe fn initWithRTFDFileWrapper_documentAttributes(
            this: Option<Allocated<Self>>,
            wrapper: &NSFileWrapper,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(RTFFromRange:documentAttributes:)]
        pub unsafe fn RTFFromRange_documentAttributes(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Option<Id<NSData, Shared>>;

        #[method_id(RTFDFromRange:documentAttributes:)]
        pub unsafe fn RTFDFromRange_documentAttributes(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Option<Id<NSData, Shared>>;

        #[method_id(RTFDFileWrapperFromRange:documentAttributes:)]
        pub unsafe fn RTFDFileWrapperFromRange_documentAttributes(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Option<Id<NSFileWrapper, Shared>>;

        #[method_id(docFormatFromRange:documentAttributes:)]
        pub unsafe fn docFormatFromRange_documentAttributes(
            &self,
            range: NSRange,
            dict: &NSDictionary<NSAttributedStringDocumentAttributeKey, Object>,
        ) -> Option<Id<NSData, Shared>>;
    }
);

extern_methods!(
    /// NSMutableAttributedStringDocumentFormats
    unsafe impl NSMutableAttributedString {
        #[method(readFromURL:options:documentAttributes:error:)]
        pub unsafe fn readFromURL_options_documentAttributes_error(
            &self,
            url: &NSURL,
            opts: &NSDictionary<NSAttributedStringDocumentReadingOptionKey, Object>,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Result<(), Id<NSError, Shared>>;

        #[method(readFromData:options:documentAttributes:error:)]
        pub unsafe fn readFromData_options_documentAttributes_error(
            &self,
            data: &NSData,
            opts: &NSDictionary<NSAttributedStringDocumentReadingOptionKey, Object>,
            dict: Option<
                &mut Option<
                    Id<NSDictionary<NSAttributedStringDocumentAttributeKey, Object>, Shared>,
                >,
            >,
        ) -> Result<(), Id<NSError, Shared>>;
    }
);

extern_methods!(
    /// NSAttributedStringKitAdditions
    unsafe impl NSAttributedString {
        #[method_id(fontAttributesInRange:)]
        pub unsafe fn fontAttributesInRange(
            &self,
            range: NSRange,
        ) -> Id<NSDictionary<NSAttributedStringKey, Object>, Shared>;

        #[method_id(rulerAttributesInRange:)]
        pub unsafe fn rulerAttributesInRange(
            &self,
            range: NSRange,
        ) -> Id<NSDictionary<NSAttributedStringKey, Object>, Shared>;

        #[method(containsAttachmentsInRange:)]
        pub unsafe fn containsAttachmentsInRange(&self, range: NSRange) -> bool;

        #[method(lineBreakBeforeIndex:withinRange:)]
        pub unsafe fn lineBreakBeforeIndex_withinRange(
            &self,
            location: NSUInteger,
            aRange: NSRange,
        ) -> NSUInteger;

        #[method(lineBreakByHyphenatingBeforeIndex:withinRange:)]
        pub unsafe fn lineBreakByHyphenatingBeforeIndex_withinRange(
            &self,
            location: NSUInteger,
            aRange: NSRange,
        ) -> NSUInteger;

        #[method(doubleClickAtIndex:)]
        pub unsafe fn doubleClickAtIndex(&self, location: NSUInteger) -> NSRange;

        #[method(nextWordFromIndex:forward:)]
        pub unsafe fn nextWordFromIndex_forward(
            &self,
            location: NSUInteger,
            isForward: bool,
        ) -> NSUInteger;

        #[method(rangeOfTextBlock:atIndex:)]
        pub unsafe fn rangeOfTextBlock_atIndex(
            &self,
            block: &NSTextBlock,
            location: NSUInteger,
        ) -> NSRange;

        #[method(rangeOfTextTable:atIndex:)]
        pub unsafe fn rangeOfTextTable_atIndex(
            &self,
            table: &NSTextTable,
            location: NSUInteger,
        ) -> NSRange;

        #[method(rangeOfTextList:atIndex:)]
        pub unsafe fn rangeOfTextList_atIndex(
            &self,
            list: &NSTextList,
            location: NSUInteger,
        ) -> NSRange;

        #[method(itemNumberInTextList:atIndex:)]
        pub unsafe fn itemNumberInTextList_atIndex(
            &self,
            list: &NSTextList,
            location: NSUInteger,
        ) -> NSInteger;
    }
);

extern_methods!(
    /// NSAttributedStringPasteboardAdditions
    unsafe impl NSAttributedString {
        #[method_id(textTypes)]
        pub unsafe fn textTypes() -> Id<NSArray<NSString>, Shared>;

        #[method_id(textUnfilteredTypes)]
        pub unsafe fn textUnfilteredTypes() -> Id<NSArray<NSString>, Shared>;
    }
);

extern_methods!(
    /// NSMutableAttributedStringKitAdditions
    unsafe impl NSMutableAttributedString {
        #[method(superscriptRange:)]
        pub unsafe fn superscriptRange(&self, range: NSRange);

        #[method(subscriptRange:)]
        pub unsafe fn subscriptRange(&self, range: NSRange);

        #[method(unscriptRange:)]
        pub unsafe fn unscriptRange(&self, range: NSRange);

        #[method(applyFontTraits:range:)]
        pub unsafe fn applyFontTraits_range(&self, traitMask: NSFontTraitMask, range: NSRange);

        #[method(setAlignment:range:)]
        pub unsafe fn setAlignment_range(&self, alignment: NSTextAlignment, range: NSRange);

        #[method(setBaseWritingDirection:range:)]
        pub unsafe fn setBaseWritingDirection_range(
            &self,
            writingDirection: NSWritingDirection,
            range: NSRange,
        );
    }
);

pub static NSUnderlinePatternSolid: NSUnderlineStyle = NSUnderlineStylePatternSolid;

pub static NSUnderlinePatternDot: NSUnderlineStyle = NSUnderlineStylePatternDot;

pub static NSUnderlinePatternDash: NSUnderlineStyle = NSUnderlineStylePatternDash;

pub static NSUnderlinePatternDashDot: NSUnderlineStyle = NSUnderlineStylePatternDashDot;

pub static NSUnderlinePatternDashDotDot: NSUnderlineStyle = NSUnderlineStylePatternDashDotDot;

pub static NSUnderlineByWord: NSUnderlineStyle = NSUnderlineStyleByWord;

extern "C" {
    pub static NSCharacterShapeAttributeName: &'static NSAttributedStringKey;
}

extern "C" {
    pub static NSUsesScreenFontsDocumentAttribute: &'static NSAttributedStringKey;
}

pub const NSNoUnderlineStyle: i32 = 0;
pub const NSSingleUnderlineStyle: i32 = 1;

extern "C" {
    pub static NSUnderlineStrikethroughMask: NSUInteger;
}

extern "C" {
    pub static NSUnderlineByWordMask: NSUInteger;
}

extern_methods!(
    /// NSDeprecatedKitAdditions
    unsafe impl NSAttributedString {
        #[method(containsAttachments)]
        pub unsafe fn containsAttachments(&self) -> bool;

        #[method_id(textFileTypes)]
        pub unsafe fn textFileTypes() -> Id<NSArray, Shared>;

        #[method_id(textPasteboardTypes)]
        pub unsafe fn textPasteboardTypes() -> Id<NSArray, Shared>;

        #[method_id(textUnfilteredFileTypes)]
        pub unsafe fn textUnfilteredFileTypes() -> Id<NSArray, Shared>;

        #[method_id(textUnfilteredPasteboardTypes)]
        pub unsafe fn textUnfilteredPasteboardTypes() -> Id<NSArray, Shared>;

        #[method_id(initWithURL:documentAttributes:)]
        pub unsafe fn initWithURL_documentAttributes(
            this: Option<Allocated<Self>>,
            url: &NSURL,
            dict: Option<&mut Option<Id<NSDictionary, Shared>>>,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(initWithPath:documentAttributes:)]
        pub unsafe fn initWithPath_documentAttributes(
            this: Option<Allocated<Self>>,
            path: &NSString,
            dict: Option<&mut Option<Id<NSDictionary, Shared>>>,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(URLAtIndex:effectiveRange:)]
        pub unsafe fn URLAtIndex_effectiveRange(
            &self,
            location: NSUInteger,
            effectiveRange: NSRangePointer,
        ) -> Option<Id<NSURL, Shared>>;
    }
);

extern_methods!(
    /// NSDeprecatedKitAdditions
    unsafe impl NSMutableAttributedString {
        #[method(readFromURL:options:documentAttributes:)]
        pub unsafe fn readFromURL_options_documentAttributes(
            &self,
            url: &NSURL,
            options: &NSDictionary,
            dict: Option<&mut Option<Id<NSDictionary, Shared>>>,
        ) -> bool;

        #[method(readFromData:options:documentAttributes:)]
        pub unsafe fn readFromData_options_documentAttributes(
            &self,
            data: &NSData,
            options: &NSDictionary,
            dict: Option<&mut Option<Id<NSDictionary, Shared>>>,
        ) -> bool;
    }
);
