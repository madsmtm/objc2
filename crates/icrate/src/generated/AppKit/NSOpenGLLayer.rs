//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug)]
    pub struct NSOpenGLLayer;

    unsafe impl ClassType for NSOpenGLLayer {
        type Super = CAOpenGLLayer;
    }
);

extern_methods!(
    unsafe impl NSOpenGLLayer {
        #[method_id(@__retain_semantics Other view)]
        pub unsafe fn view(&self) -> Option<Id<NSView, Shared>>;

        #[method(setView:)]
        pub unsafe fn setView(&self, view: Option<&NSView>);

        #[method_id(@__retain_semantics Other openGLPixelFormat)]
        pub unsafe fn openGLPixelFormat(&self) -> Option<Id<NSOpenGLPixelFormat, Shared>>;

        #[method(setOpenGLPixelFormat:)]
        pub unsafe fn setOpenGLPixelFormat(&self, openGLPixelFormat: Option<&NSOpenGLPixelFormat>);

        #[method_id(@__retain_semantics Other openGLContext)]
        pub unsafe fn openGLContext(&self) -> Option<Id<NSOpenGLContext, Shared>>;

        #[method(setOpenGLContext:)]
        pub unsafe fn setOpenGLContext(&self, openGLContext: Option<&NSOpenGLContext>);

        #[method_id(@__retain_semantics Other openGLPixelFormatForDisplayMask:)]
        pub unsafe fn openGLPixelFormatForDisplayMask(
            &self,
            mask: u32,
        ) -> Id<NSOpenGLPixelFormat, Shared>;

        #[method_id(@__retain_semantics Other openGLContextForPixelFormat:)]
        pub unsafe fn openGLContextForPixelFormat(
            &self,
            pixelFormat: &NSOpenGLPixelFormat,
        ) -> Id<NSOpenGLContext, Shared>;

        #[method(canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:)]
        pub unsafe fn canDrawInOpenGLContext_pixelFormat_forLayerTime_displayTime(
            &self,
            context: &NSOpenGLContext,
            pixelFormat: &NSOpenGLPixelFormat,
            t: CFTimeInterval,
            ts: NonNull<CVTimeStamp>,
        ) -> bool;

        #[method(drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:)]
        pub unsafe fn drawInOpenGLContext_pixelFormat_forLayerTime_displayTime(
            &self,
            context: &NSOpenGLContext,
            pixelFormat: &NSOpenGLPixelFormat,
            t: CFTimeInterval,
            ts: NonNull<CVTimeStamp>,
        );
    }
);
