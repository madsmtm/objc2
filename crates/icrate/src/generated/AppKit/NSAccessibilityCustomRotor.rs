//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;

pub type NSAccessibilityCustomRotorSearchDirection = NSInteger;
pub const NSAccessibilityCustomRotorSearchDirectionPrevious:
    NSAccessibilityCustomRotorSearchDirection = 0;
pub const NSAccessibilityCustomRotorSearchDirectionNext: NSAccessibilityCustomRotorSearchDirection =
    1;

pub type NSAccessibilityCustomRotorType = NSInteger;
pub const NSAccessibilityCustomRotorTypeCustom: NSAccessibilityCustomRotorType = 0;
pub const NSAccessibilityCustomRotorTypeAny: NSAccessibilityCustomRotorType = 1;
pub const NSAccessibilityCustomRotorTypeAnnotation: NSAccessibilityCustomRotorType = 2;
pub const NSAccessibilityCustomRotorTypeBoldText: NSAccessibilityCustomRotorType = 3;
pub const NSAccessibilityCustomRotorTypeHeading: NSAccessibilityCustomRotorType = 4;
pub const NSAccessibilityCustomRotorTypeHeadingLevel1: NSAccessibilityCustomRotorType = 5;
pub const NSAccessibilityCustomRotorTypeHeadingLevel2: NSAccessibilityCustomRotorType = 6;
pub const NSAccessibilityCustomRotorTypeHeadingLevel3: NSAccessibilityCustomRotorType = 7;
pub const NSAccessibilityCustomRotorTypeHeadingLevel4: NSAccessibilityCustomRotorType = 8;
pub const NSAccessibilityCustomRotorTypeHeadingLevel5: NSAccessibilityCustomRotorType = 9;
pub const NSAccessibilityCustomRotorTypeHeadingLevel6: NSAccessibilityCustomRotorType = 10;
pub const NSAccessibilityCustomRotorTypeImage: NSAccessibilityCustomRotorType = 11;
pub const NSAccessibilityCustomRotorTypeItalicText: NSAccessibilityCustomRotorType = 12;
pub const NSAccessibilityCustomRotorTypeLandmark: NSAccessibilityCustomRotorType = 13;
pub const NSAccessibilityCustomRotorTypeLink: NSAccessibilityCustomRotorType = 14;
pub const NSAccessibilityCustomRotorTypeList: NSAccessibilityCustomRotorType = 15;
pub const NSAccessibilityCustomRotorTypeMisspelledWord: NSAccessibilityCustomRotorType = 16;
pub const NSAccessibilityCustomRotorTypeTable: NSAccessibilityCustomRotorType = 17;
pub const NSAccessibilityCustomRotorTypeTextField: NSAccessibilityCustomRotorType = 18;
pub const NSAccessibilityCustomRotorTypeUnderlinedText: NSAccessibilityCustomRotorType = 19;
pub const NSAccessibilityCustomRotorTypeVisitedLink: NSAccessibilityCustomRotorType = 20;
pub const NSAccessibilityCustomRotorTypeAudiograph: NSAccessibilityCustomRotorType = 21;

extern_class!(
    #[derive(Debug)]
    pub struct NSAccessibilityCustomRotor;

    unsafe impl ClassType for NSAccessibilityCustomRotor {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSAccessibilityCustomRotor {
        #[method_id(initWithLabel:itemSearchDelegate:)]
        pub unsafe fn initWithLabel_itemSearchDelegate(
            &self,
            label: &NSString,
            itemSearchDelegate: &NSAccessibilityCustomRotorItemSearchDelegate,
        ) -> Id<Self, Shared>;

        #[method_id(initWithRotorType:itemSearchDelegate:)]
        pub unsafe fn initWithRotorType_itemSearchDelegate(
            &self,
            rotorType: NSAccessibilityCustomRotorType,
            itemSearchDelegate: &NSAccessibilityCustomRotorItemSearchDelegate,
        ) -> Id<Self, Shared>;

        #[method(type)]
        pub unsafe fn type_(&self) -> NSAccessibilityCustomRotorType;

        #[method(setType:)]
        pub unsafe fn setType(&self, type_: NSAccessibilityCustomRotorType);

        #[method_id(label)]
        pub unsafe fn label(&self) -> Id<NSString, Shared>;

        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: &NSString);

        #[method_id(itemSearchDelegate)]
        pub unsafe fn itemSearchDelegate(
            &self,
        ) -> Option<Id<NSAccessibilityCustomRotorItemSearchDelegate, Shared>>;

        #[method(setItemSearchDelegate:)]
        pub unsafe fn setItemSearchDelegate(
            &self,
            itemSearchDelegate: Option<&NSAccessibilityCustomRotorItemSearchDelegate>,
        );

        #[method_id(itemLoadingDelegate)]
        pub unsafe fn itemLoadingDelegate(
            &self,
        ) -> Option<Id<NSAccessibilityElementLoading, Shared>>;

        #[method(setItemLoadingDelegate:)]
        pub unsafe fn setItemLoadingDelegate(
            &self,
            itemLoadingDelegate: Option<&NSAccessibilityElementLoading>,
        );
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSAccessibilityCustomRotorSearchParameters;

    unsafe impl ClassType for NSAccessibilityCustomRotorSearchParameters {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSAccessibilityCustomRotorSearchParameters {
        #[method_id(currentItem)]
        pub unsafe fn currentItem(
            &self,
        ) -> Option<Id<NSAccessibilityCustomRotorItemResult, Shared>>;

        #[method(setCurrentItem:)]
        pub unsafe fn setCurrentItem(
            &self,
            currentItem: Option<&NSAccessibilityCustomRotorItemResult>,
        );

        #[method(searchDirection)]
        pub unsafe fn searchDirection(&self) -> NSAccessibilityCustomRotorSearchDirection;

        #[method(setSearchDirection:)]
        pub unsafe fn setSearchDirection(
            &self,
            searchDirection: NSAccessibilityCustomRotorSearchDirection,
        );

        #[method_id(filterString)]
        pub unsafe fn filterString(&self) -> Id<NSString, Shared>;

        #[method(setFilterString:)]
        pub unsafe fn setFilterString(&self, filterString: &NSString);
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSAccessibilityCustomRotorItemResult;

    unsafe impl ClassType for NSAccessibilityCustomRotorItemResult {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSAccessibilityCustomRotorItemResult {
        #[method_id(new)]
        pub unsafe fn new() -> Id<Self, Shared>;

        #[method_id(init)]
        pub unsafe fn init(&self) -> Id<Self, Shared>;

        #[method_id(initWithTargetElement:)]
        pub unsafe fn initWithTargetElement(
            &self,
            targetElement: &NSAccessibilityElement,
        ) -> Id<Self, Shared>;

        #[method_id(initWithItemLoadingToken:customLabel:)]
        pub unsafe fn initWithItemLoadingToken_customLabel(
            &self,
            itemLoadingToken: &NSAccessibilityLoadingToken,
            customLabel: &NSString,
        ) -> Id<Self, Shared>;

        #[method_id(targetElement)]
        pub unsafe fn targetElement(&self) -> Option<Id<NSAccessibilityElement, Shared>>;

        #[method_id(itemLoadingToken)]
        pub unsafe fn itemLoadingToken(&self) -> Option<Id<NSAccessibilityLoadingToken, Shared>>;

        #[method(targetRange)]
        pub unsafe fn targetRange(&self) -> NSRange;

        #[method(setTargetRange:)]
        pub unsafe fn setTargetRange(&self, targetRange: NSRange);

        #[method_id(customLabel)]
        pub unsafe fn customLabel(&self) -> Option<Id<NSString, Shared>>;

        #[method(setCustomLabel:)]
        pub unsafe fn setCustomLabel(&self, customLabel: Option<&NSString>);
    }
);

pub type NSAccessibilityCustomRotorItemSearchDelegate = NSObject;
