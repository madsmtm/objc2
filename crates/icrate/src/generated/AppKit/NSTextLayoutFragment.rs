//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;

pub type NSTextLayoutFragmentEnumerationOptions = NSUInteger;
pub const NSTextLayoutFragmentEnumerationOptionsNone: NSTextLayoutFragmentEnumerationOptions = 0;
pub const NSTextLayoutFragmentEnumerationOptionsReverse: NSTextLayoutFragmentEnumerationOptions =
    1 << 0;
pub const NSTextLayoutFragmentEnumerationOptionsEstimatesSize:
    NSTextLayoutFragmentEnumerationOptions = 1 << 1;
pub const NSTextLayoutFragmentEnumerationOptionsEnsuresLayout:
    NSTextLayoutFragmentEnumerationOptions = 1 << 2;
pub const NSTextLayoutFragmentEnumerationOptionsEnsuresExtraLineFragment:
    NSTextLayoutFragmentEnumerationOptions = 1 << 3;

pub type NSTextLayoutFragmentState = NSUInteger;
pub const NSTextLayoutFragmentStateNone: NSTextLayoutFragmentState = 0;
pub const NSTextLayoutFragmentStateEstimatedUsageBounds: NSTextLayoutFragmentState = 1;
pub const NSTextLayoutFragmentStateCalculatedUsageBounds: NSTextLayoutFragmentState = 2;
pub const NSTextLayoutFragmentStateLayoutAvailable: NSTextLayoutFragmentState = 3;

extern_class!(
    #[derive(Debug)]
    pub struct NSTextLayoutFragment;

    unsafe impl ClassType for NSTextLayoutFragment {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSTextLayoutFragment {
        #[method_id(initWithTextElement:range:)]
        pub unsafe fn initWithTextElement_range(
            &self,
            textElement: &NSTextElement,
            rangeInElement: Option<&NSTextRange>,
        ) -> Id<Self, Shared>;

        #[method_id(initWithCoder:)]
        pub unsafe fn initWithCoder(&self, coder: &NSCoder) -> Option<Id<Self, Shared>>;

        #[method_id(init)]
        pub unsafe fn init(&self) -> Id<Self, Shared>;

        #[method_id(textLayoutManager)]
        pub unsafe fn textLayoutManager(&self) -> Option<Id<NSTextLayoutManager, Shared>>;

        #[method_id(textElement)]
        pub unsafe fn textElement(&self) -> Option<Id<NSTextElement, Shared>>;

        #[method_id(rangeInElement)]
        pub unsafe fn rangeInElement(&self) -> Id<NSTextRange, Shared>;

        #[method_id(textLineFragments)]
        pub unsafe fn textLineFragments(&self) -> Id<NSArray<NSTextLineFragment>, Shared>;

        #[method_id(layoutQueue)]
        pub unsafe fn layoutQueue(&self) -> Option<Id<NSOperationQueue, Shared>>;

        #[method(setLayoutQueue:)]
        pub unsafe fn setLayoutQueue(&self, layoutQueue: Option<&NSOperationQueue>);

        #[method(state)]
        pub unsafe fn state(&self) -> NSTextLayoutFragmentState;

        #[method(invalidateLayout)]
        pub unsafe fn invalidateLayout(&self);

        #[method(layoutFragmentFrame)]
        pub unsafe fn layoutFragmentFrame(&self) -> CGRect;

        #[method(renderingSurfaceBounds)]
        pub unsafe fn renderingSurfaceBounds(&self) -> CGRect;

        #[method(leadingPadding)]
        pub unsafe fn leadingPadding(&self) -> CGFloat;

        #[method(trailingPadding)]
        pub unsafe fn trailingPadding(&self) -> CGFloat;

        #[method(topMargin)]
        pub unsafe fn topMargin(&self) -> CGFloat;

        #[method(bottomMargin)]
        pub unsafe fn bottomMargin(&self) -> CGFloat;

        #[method(drawAtPoint:inContext:)]
        pub unsafe fn drawAtPoint_inContext(&self, point: CGPoint, context: CGContextRef);

        #[method_id(textAttachmentViewProviders)]
        pub unsafe fn textAttachmentViewProviders(
            &self,
        ) -> Id<NSArray<NSTextAttachmentViewProvider>, Shared>;

        #[method(frameForTextAttachmentAtLocation:)]
        pub unsafe fn frameForTextAttachmentAtLocation(&self, location: &NSTextLocation) -> CGRect;
    }
);
