//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSToolbarItemGroupSelectionMode = NSInteger;
pub const NSToolbarItemGroupSelectionModeSelectOne: NSToolbarItemGroupSelectionMode = 0;
pub const NSToolbarItemGroupSelectionModeSelectAny: NSToolbarItemGroupSelectionMode = 1;
pub const NSToolbarItemGroupSelectionModeMomentary: NSToolbarItemGroupSelectionMode = 2;

pub type NSToolbarItemGroupControlRepresentation = NSInteger;
pub const NSToolbarItemGroupControlRepresentationAutomatic:
    NSToolbarItemGroupControlRepresentation = 0;
pub const NSToolbarItemGroupControlRepresentationExpanded: NSToolbarItemGroupControlRepresentation =
    1;
pub const NSToolbarItemGroupControlRepresentationCollapsed:
    NSToolbarItemGroupControlRepresentation = 2;

extern_class!(
    #[derive(Debug)]
    pub struct NSToolbarItemGroup;

    unsafe impl ClassType for NSToolbarItemGroup {
        type Super = NSToolbarItem;
    }
);

extern_methods!(
    unsafe impl NSToolbarItemGroup {
        #[method_id(@__retain_semantics Other groupWithItemIdentifier:titles:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_titles_selectionMode_labels_target_action(
            itemIdentifier: &NSToolbarItemIdentifier,
            titles: &NSArray<NSString>,
            selectionMode: NSToolbarItemGroupSelectionMode,
            labels: Option<&NSArray<NSString>>,
            target: Option<&Object>,
            action: OptionSel,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other groupWithItemIdentifier:images:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_images_selectionMode_labels_target_action(
            itemIdentifier: &NSToolbarItemIdentifier,
            images: &NSArray<NSImage>,
            selectionMode: NSToolbarItemGroupSelectionMode,
            labels: Option<&NSArray<NSString>>,
            target: Option<&Object>,
            action: OptionSel,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other subitems)]
        pub unsafe fn subitems(&self) -> Id<NSArray<NSToolbarItem>, Shared>;

        #[method(setSubitems:)]
        pub unsafe fn setSubitems(&self, subitems: &NSArray<NSToolbarItem>);

        #[method(controlRepresentation)]
        pub unsafe fn controlRepresentation(&self) -> NSToolbarItemGroupControlRepresentation;

        #[method(setControlRepresentation:)]
        pub unsafe fn setControlRepresentation(
            &self,
            controlRepresentation: NSToolbarItemGroupControlRepresentation,
        );

        #[method(selectionMode)]
        pub unsafe fn selectionMode(&self) -> NSToolbarItemGroupSelectionMode;

        #[method(setSelectionMode:)]
        pub unsafe fn setSelectionMode(&self, selectionMode: NSToolbarItemGroupSelectionMode);

        #[method(selectedIndex)]
        pub unsafe fn selectedIndex(&self) -> NSInteger;

        #[method(setSelectedIndex:)]
        pub unsafe fn setSelectedIndex(&self, selectedIndex: NSInteger);

        #[method(setSelected:atIndex:)]
        pub unsafe fn setSelected_atIndex(&self, selected: bool, index: NSInteger);

        #[method(isSelectedAtIndex:)]
        pub unsafe fn isSelectedAtIndex(&self, index: NSInteger) -> bool;
    }
);
