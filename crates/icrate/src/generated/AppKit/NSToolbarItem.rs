//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSToolbarItemVisibilityPriority = NSInteger;

extern_static!(NSToolbarItemVisibilityPriorityStandard: NSToolbarItemVisibilityPriority = 0);

extern_static!(NSToolbarItemVisibilityPriorityLow: NSToolbarItemVisibilityPriority = -1000);

extern_static!(NSToolbarItemVisibilityPriorityHigh: NSToolbarItemVisibilityPriority = 1000);

extern_static!(NSToolbarItemVisibilityPriorityUser: NSToolbarItemVisibilityPriority = 2000);

extern_class!(
    #[derive(Debug)]
    pub struct NSToolbarItem;

    unsafe impl ClassType for NSToolbarItem {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSToolbarItem {
        #[method_id(@__retain_semantics Init initWithItemIdentifier:)]
        pub unsafe fn initWithItemIdentifier(
            this: Option<Allocated<Self>>,
            itemIdentifier: &NSToolbarItemIdentifier,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other itemIdentifier)]
        pub unsafe fn itemIdentifier(&self) -> Id<NSToolbarItemIdentifier, Shared>;

        #[method_id(@__retain_semantics Other toolbar)]
        pub unsafe fn toolbar(&self) -> Option<Id<NSToolbar, Shared>>;

        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Id<NSString, Shared>;

        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: &NSString);

        #[method_id(@__retain_semantics Other paletteLabel)]
        pub unsafe fn paletteLabel(&self) -> Id<NSString, Shared>;

        #[method(setPaletteLabel:)]
        pub unsafe fn setPaletteLabel(&self, paletteLabel: &NSString);

        #[method_id(@__retain_semantics Other toolTip)]
        pub unsafe fn toolTip(&self) -> Option<Id<NSString, Shared>>;

        #[method(setToolTip:)]
        pub unsafe fn setToolTip(&self, toolTip: Option<&NSString>);

        #[method_id(@__retain_semantics Other menuFormRepresentation)]
        pub unsafe fn menuFormRepresentation(&self) -> Option<Id<NSMenuItem, Shared>>;

        #[method(setMenuFormRepresentation:)]
        pub unsafe fn setMenuFormRepresentation(&self, menuFormRepresentation: Option<&NSMenuItem>);

        #[method(tag)]
        pub unsafe fn tag(&self) -> NSInteger;

        #[method(setTag:)]
        pub unsafe fn setTag(&self, tag: NSInteger);

        #[method_id(@__retain_semantics Other target)]
        pub unsafe fn target(&self) -> Option<Id<Object, Shared>>;

        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&Object>);

        #[method(action)]
        pub unsafe fn action(&self) -> OptionSel;

        #[method(setAction:)]
        pub unsafe fn setAction(&self, action: OptionSel);

        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        #[method(setEnabled:)]
        pub unsafe fn setEnabled(&self, enabled: bool);

        #[method_id(@__retain_semantics Other image)]
        pub unsafe fn image(&self) -> Option<Id<NSImage, Shared>>;

        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&NSImage>);

        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Id<NSString, Shared>;

        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: &NSString);

        #[method(isBordered)]
        pub unsafe fn isBordered(&self) -> bool;

        #[method(setBordered:)]
        pub unsafe fn setBordered(&self, bordered: bool);

        #[method(isNavigational)]
        pub unsafe fn isNavigational(&self) -> bool;

        #[method(setNavigational:)]
        pub unsafe fn setNavigational(&self, navigational: bool);

        #[method_id(@__retain_semantics Other view)]
        pub unsafe fn view(&self) -> Option<Id<NSView, Shared>>;

        #[method(setView:)]
        pub unsafe fn setView(&self, view: Option<&NSView>);

        #[method(minSize)]
        pub unsafe fn minSize(&self) -> NSSize;

        #[method(setMinSize:)]
        pub unsafe fn setMinSize(&self, minSize: NSSize);

        #[method(maxSize)]
        pub unsafe fn maxSize(&self) -> NSSize;

        #[method(setMaxSize:)]
        pub unsafe fn setMaxSize(&self, maxSize: NSSize);

        #[method(visibilityPriority)]
        pub unsafe fn visibilityPriority(&self) -> NSToolbarItemVisibilityPriority;

        #[method(setVisibilityPriority:)]
        pub unsafe fn setVisibilityPriority(
            &self,
            visibilityPriority: NSToolbarItemVisibilityPriority,
        );

        #[method(validate)]
        pub unsafe fn validate(&self);

        #[method(autovalidates)]
        pub unsafe fn autovalidates(&self) -> bool;

        #[method(setAutovalidates:)]
        pub unsafe fn setAutovalidates(&self, autovalidates: bool);

        #[method(allowsDuplicatesInToolbar)]
        pub unsafe fn allowsDuplicatesInToolbar(&self) -> bool;
    }
);

extern_methods!(
    unsafe impl NSToolbarItem {}
);

extern_protocol!(
    pub struct NSToolbarItemValidation;

    unsafe impl NSToolbarItemValidation {
        #[method(validateToolbarItem:)]
        pub unsafe fn validateToolbarItem(&self, item: &NSToolbarItem) -> bool;
    }
);

extern_methods!(
    /// NSToolbarItemValidation
    unsafe impl NSObject {
        #[method(validateToolbarItem:)]
        pub unsafe fn validateToolbarItem(&self, item: &NSToolbarItem) -> bool;
    }
);

extern_protocol!(
    pub struct NSCloudSharingValidation;

    unsafe impl NSCloudSharingValidation {
        #[method_id(@__retain_semantics Other cloudShareForUserInterfaceItem:)]
        pub unsafe fn cloudShareForUserInterfaceItem(
            &self,
            item: &NSValidatedUserInterfaceItem,
        ) -> Option<Id<CKShare, Shared>>;
    }
);

extern_static!(NSToolbarSeparatorItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarSpaceItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarFlexibleSpaceItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarShowColorsItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarShowFontsItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarCustomizeToolbarItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarPrintItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarToggleSidebarItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarCloudSharingItemIdentifier: &'static NSToolbarItemIdentifier);

extern_static!(NSToolbarSidebarTrackingSeparatorItemIdentifier: &'static NSToolbarItemIdentifier);
