//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[allow(unused_imports)]
use objc2::rc::{Id, Shared};
#[allow(unused_imports)]
use objc2::{extern_class, extern_methods, ClassType};

pub type NSTextFinderAction = NSInteger;
pub const NSTextFinderActionShowFindInterface: NSTextFinderAction = 1;
pub const NSTextFinderActionNextMatch: NSTextFinderAction = 2;
pub const NSTextFinderActionPreviousMatch: NSTextFinderAction = 3;
pub const NSTextFinderActionReplaceAll: NSTextFinderAction = 4;
pub const NSTextFinderActionReplace: NSTextFinderAction = 5;
pub const NSTextFinderActionReplaceAndFind: NSTextFinderAction = 6;
pub const NSTextFinderActionSetSearchString: NSTextFinderAction = 7;
pub const NSTextFinderActionReplaceAllInSelection: NSTextFinderAction = 8;
pub const NSTextFinderActionSelectAll: NSTextFinderAction = 9;
pub const NSTextFinderActionSelectAllInSelection: NSTextFinderAction = 10;
pub const NSTextFinderActionHideFindInterface: NSTextFinderAction = 11;
pub const NSTextFinderActionShowReplaceInterface: NSTextFinderAction = 12;
pub const NSTextFinderActionHideReplaceInterface: NSTextFinderAction = 13;

pub type NSPasteboardTypeTextFinderOptionKey = NSString;

extern "C" {
    static NSTextFinderCaseInsensitiveKey: &'static NSPasteboardTypeTextFinderOptionKey;
}

extern "C" {
    static NSTextFinderMatchingTypeKey: &'static NSPasteboardTypeTextFinderOptionKey;
}

pub type NSTextFinderMatchingType = NSInteger;
pub const NSTextFinderMatchingTypeContains: NSTextFinderMatchingType = 0;
pub const NSTextFinderMatchingTypeStartsWith: NSTextFinderMatchingType = 1;
pub const NSTextFinderMatchingTypeFullWord: NSTextFinderMatchingType = 2;
pub const NSTextFinderMatchingTypeEndsWith: NSTextFinderMatchingType = 3;

extern_class!(
    #[derive(Debug)]
    pub struct NSTextFinder;

    unsafe impl ClassType for NSTextFinder {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSTextFinder {
        #[method_id(init)]
        pub unsafe fn init(&self) -> Id<Self, Shared>;

        #[method_id(initWithCoder:)]
        pub unsafe fn initWithCoder(&self, coder: &NSCoder) -> Id<Self, Shared>;

        #[method_id(client)]
        pub unsafe fn client(&self) -> Option<Id<NSTextFinderClient, Shared>>;

        #[method(setClient:)]
        pub unsafe fn setClient(&self, client: Option<&NSTextFinderClient>);

        #[method(performAction:)]
        pub unsafe fn performAction(&self, op: NSTextFinderAction);

        #[method(validateAction:)]
        pub unsafe fn validateAction(&self, op: NSTextFinderAction) -> bool;

        #[method_id(findBarContainer)]
        pub unsafe fn findBarContainer(&self) -> Option<Id<NSTextFinderBarContainer, Shared>>;

        #[method(setFindBarContainer:)]
        pub unsafe fn setFindBarContainer(
            &self,
            findBarContainer: Option<&NSTextFinderBarContainer>,
        );

        #[method(cancelFindIndicator)]
        pub unsafe fn cancelFindIndicator(&self);

        #[method(findIndicatorNeedsUpdate)]
        pub unsafe fn findIndicatorNeedsUpdate(&self) -> bool;

        #[method(setFindIndicatorNeedsUpdate:)]
        pub unsafe fn setFindIndicatorNeedsUpdate(&self, findIndicatorNeedsUpdate: bool);

        #[method(isIncrementalSearchingEnabled)]
        pub unsafe fn isIncrementalSearchingEnabled(&self) -> bool;

        #[method(setIncrementalSearchingEnabled:)]
        pub unsafe fn setIncrementalSearchingEnabled(&self, incrementalSearchingEnabled: bool);

        #[method(incrementalSearchingShouldDimContentView)]
        pub unsafe fn incrementalSearchingShouldDimContentView(&self) -> bool;

        #[method(setIncrementalSearchingShouldDimContentView:)]
        pub unsafe fn setIncrementalSearchingShouldDimContentView(
            &self,
            incrementalSearchingShouldDimContentView: bool,
        );

        #[method_id(incrementalMatchRanges)]
        pub unsafe fn incrementalMatchRanges(&self) -> Id<NSArray<NSValue>, Shared>;

        #[method(drawIncrementalMatchHighlightInRect:)]
        pub unsafe fn drawIncrementalMatchHighlightInRect(rect: NSRect);

        #[method(noteClientStringWillChange)]
        pub unsafe fn noteClientStringWillChange(&self);
    }
);

pub type NSTextFinderClient = NSObject;

pub type NSTextFinderBarContainer = NSObject;
