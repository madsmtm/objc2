//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;

pub type NSPrintPanelOptions = NSUInteger;
pub const NSPrintPanelShowsCopies: NSPrintPanelOptions = 1 << 0;
pub const NSPrintPanelShowsPageRange: NSPrintPanelOptions = 1 << 1;
pub const NSPrintPanelShowsPaperSize: NSPrintPanelOptions = 1 << 2;
pub const NSPrintPanelShowsOrientation: NSPrintPanelOptions = 1 << 3;
pub const NSPrintPanelShowsScaling: NSPrintPanelOptions = 1 << 4;
pub const NSPrintPanelShowsPrintSelection: NSPrintPanelOptions = 1 << 5;
pub const NSPrintPanelShowsPageSetupAccessory: NSPrintPanelOptions = 1 << 8;
pub const NSPrintPanelShowsPreview: NSPrintPanelOptions = 1 << 17;

pub type NSPrintPanelJobStyleHint = NSString;

extern "C" {
    pub static NSPrintPhotoJobStyleHint: &'static NSPrintPanelJobStyleHint;
}

extern "C" {
    pub static NSPrintAllPresetsJobStyleHint: &'static NSPrintPanelJobStyleHint;
}

extern "C" {
    pub static NSPrintNoPresetsJobStyleHint: &'static NSPrintPanelJobStyleHint;
}

pub type NSPrintPanelAccessorySummaryKey = NSString;

extern "C" {
    pub static NSPrintPanelAccessorySummaryItemNameKey: &'static NSPrintPanelAccessorySummaryKey;
}

extern "C" {
    pub static NSPrintPanelAccessorySummaryItemDescriptionKey:
        &'static NSPrintPanelAccessorySummaryKey;
}

pub type NSPrintPanelAccessorizing = NSObject;

extern_class!(
    #[derive(Debug)]
    pub struct NSPrintPanel;

    unsafe impl ClassType for NSPrintPanel {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSPrintPanel {
        #[method_id(@__retain_semantics Other printPanel)]
        pub unsafe fn printPanel() -> Id<NSPrintPanel, Shared>;

        #[method(addAccessoryController:)]
        pub unsafe fn addAccessoryController(&self, accessoryController: &TodoProtocols);

        #[method(removeAccessoryController:)]
        pub unsafe fn removeAccessoryController(&self, accessoryController: &TodoProtocols);

        #[method_id(@__retain_semantics Other accessoryControllers)]
        pub unsafe fn accessoryControllers(&self) -> Id<NSArray<NSViewController>, Shared>;

        #[method(options)]
        pub unsafe fn options(&self) -> NSPrintPanelOptions;

        #[method(setOptions:)]
        pub unsafe fn setOptions(&self, options: NSPrintPanelOptions);

        #[method(setDefaultButtonTitle:)]
        pub unsafe fn setDefaultButtonTitle(&self, defaultButtonTitle: Option<&NSString>);

        #[method_id(@__retain_semantics Other defaultButtonTitle)]
        pub unsafe fn defaultButtonTitle(&self) -> Option<Id<NSString, Shared>>;

        #[method_id(@__retain_semantics Other helpAnchor)]
        pub unsafe fn helpAnchor(&self) -> Option<Id<NSHelpAnchorName, Shared>>;

        #[method(setHelpAnchor:)]
        pub unsafe fn setHelpAnchor(&self, helpAnchor: Option<&NSHelpAnchorName>);

        #[method_id(@__retain_semantics Other jobStyleHint)]
        pub unsafe fn jobStyleHint(&self) -> Option<Id<NSPrintPanelJobStyleHint, Shared>>;

        #[method(setJobStyleHint:)]
        pub unsafe fn setJobStyleHint(&self, jobStyleHint: Option<&NSPrintPanelJobStyleHint>);

        #[method(beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:)]
        pub unsafe fn beginSheetWithPrintInfo_modalForWindow_delegate_didEndSelector_contextInfo(
            &self,
            printInfo: &NSPrintInfo,
            docWindow: &NSWindow,
            delegate: Option<&Object>,
            didEndSelector: Option<Sel>,
            contextInfo: *mut c_void,
        );

        #[method(runModalWithPrintInfo:)]
        pub unsafe fn runModalWithPrintInfo(&self, printInfo: &NSPrintInfo) -> NSInteger;

        #[method(runModal)]
        pub unsafe fn runModal(&self) -> NSInteger;

        #[method_id(@__retain_semantics Other printInfo)]
        pub unsafe fn printInfo(&self) -> Id<NSPrintInfo, Shared>;
    }
);

extern_methods!(
    /// NSDeprecated
    unsafe impl NSPrintPanel {
        #[method(setAccessoryView:)]
        pub unsafe fn setAccessoryView(&self, accessoryView: Option<&NSView>);

        #[method_id(@__retain_semantics Other accessoryView)]
        pub unsafe fn accessoryView(&self) -> Option<Id<NSView, Shared>>;

        #[method(updateFromPrintInfo)]
        pub unsafe fn updateFromPrintInfo(&self);

        #[method(finalWritePrintInfo)]
        pub unsafe fn finalWritePrintInfo(&self);
    }
);
