//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug)]
    pub struct ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest;

    unsafe impl ClassType for ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest {
        type Super = ASAuthorizationRequest;
    }
);

extern_methods!(
    unsafe impl ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest {
        #[method_id(@__retain_semantics Other credentialParameters)]
        pub unsafe fn credentialParameters(
            &self,
        ) -> Id<NSArray<ASAuthorizationPublicKeyCredentialParameters>, Shared>;

        #[method(setCredentialParameters:)]
        pub unsafe fn setCredentialParameters(
            &self,
            credentialParameters: &NSArray<ASAuthorizationPublicKeyCredentialParameters>,
        );

        #[method_id(@__retain_semantics Other excludedCredentials)]
        pub unsafe fn excludedCredentials(
            &self,
        ) -> Id<NSArray<ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor>, Shared>;

        #[method(setExcludedCredentials:)]
        pub unsafe fn setExcludedCredentials(
            &self,
            excludedCredentials: &NSArray<ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor>,
        );

        #[method_id(@__retain_semantics Other residentKeyPreference)]
        pub unsafe fn residentKeyPreference(
            &self,
        ) -> Id<ASAuthorizationPublicKeyCredentialResidentKeyPreference, Shared>;

        #[method(setResidentKeyPreference:)]
        pub unsafe fn setResidentKeyPreference(
            &self,
            residentKeyPreference: &ASAuthorizationPublicKeyCredentialResidentKeyPreference,
        );

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;
    }
);
