//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug)]
    pub struct ASAuthorizationSecurityKeyPublicKeyCredentialProvider;

    unsafe impl ClassType for ASAuthorizationSecurityKeyPublicKeyCredentialProvider {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl ASAuthorizationSecurityKeyPublicKeyCredentialProvider {
        #[method_id(@__retain_semantics Init initWithRelyingPartyIdentifier:)]
        pub unsafe fn initWithRelyingPartyIdentifier(
            this: Option<Allocated<Self>>,
            relyingPartyIdentifier: &NSString,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other createCredentialRegistrationRequestWithChallenge:displayName:name:userID:)]
        pub unsafe fn createCredentialRegistrationRequestWithChallenge_displayName_name_userID(
            &self,
            challenge: &NSData,
            displayName: &NSString,
            name: &NSString,
            userID: &NSData,
        ) -> Id<ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest, Shared>;

        #[method_id(@__retain_semantics Other createCredentialAssertionRequestWithChallenge:)]
        pub unsafe fn createCredentialAssertionRequestWithChallenge(
            &self,
            challenge: &NSData,
        ) -> Id<ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest, Shared>;

        #[method_id(@__retain_semantics Other relyingPartyIdentifier)]
        pub unsafe fn relyingPartyIdentifier(&self) -> Id<NSString, Shared>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self, Shared>;
    }
);
