//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[allow(unused_imports)]
use objc2::rc::{Id, Shared};
#[allow(unused_imports)]
use objc2::{extern_class, extern_methods, ClassType};

extern_methods!(
    /// NSStringPathExtensions
    unsafe impl NSString {
        #[method_id(pathWithComponents:)]
        pub unsafe fn pathWithComponents(components: &NSArray<NSString>) -> Id<NSString, Shared>;

        #[method_id(pathComponents)]
        pub unsafe fn pathComponents(&self) -> Id<NSArray<NSString>, Shared>;

        #[method(isAbsolutePath)]
        pub unsafe fn isAbsolutePath(&self) -> bool;

        #[method_id(lastPathComponent)]
        pub unsafe fn lastPathComponent(&self) -> Id<NSString, Shared>;

        #[method_id(stringByDeletingLastPathComponent)]
        pub unsafe fn stringByDeletingLastPathComponent(&self) -> Id<NSString, Shared>;

        #[method_id(stringByAppendingPathComponent:)]
        pub fn stringByAppendingPathComponent(&self, str: &NSString) -> Id<NSString, Shared>;

        #[method_id(pathExtension)]
        pub unsafe fn pathExtension(&self) -> Id<NSString, Shared>;

        #[method_id(stringByDeletingPathExtension)]
        pub unsafe fn stringByDeletingPathExtension(&self) -> Id<NSString, Shared>;

        #[method_id(stringByAppendingPathExtension:)]
        pub unsafe fn stringByAppendingPathExtension(
            &self,
            str: &NSString,
        ) -> Option<Id<NSString, Shared>>;

        #[method_id(stringByAbbreviatingWithTildeInPath)]
        pub unsafe fn stringByAbbreviatingWithTildeInPath(&self) -> Id<NSString, Shared>;

        #[method_id(stringByExpandingTildeInPath)]
        pub unsafe fn stringByExpandingTildeInPath(&self) -> Id<NSString, Shared>;

        #[method_id(stringByStandardizingPath)]
        pub unsafe fn stringByStandardizingPath(&self) -> Id<NSString, Shared>;

        #[method_id(stringByResolvingSymlinksInPath)]
        pub unsafe fn stringByResolvingSymlinksInPath(&self) -> Id<NSString, Shared>;

        #[method_id(stringsByAppendingPaths:)]
        pub unsafe fn stringsByAppendingPaths(
            &self,
            paths: &NSArray<NSString>,
        ) -> Id<NSArray<NSString>, Shared>;

        #[method(completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:)]
        pub unsafe fn completePathIntoString_caseSensitive_matchesIntoArray_filterTypes(
            &self,
            outputName: Option<&mut Option<Id<NSString, Shared>>>,
            flag: bool,
            outputArray: Option<&mut Option<Id<NSArray<NSString>, Shared>>>,
            filterTypes: Option<&NSArray<NSString>>,
        ) -> NSUInteger;

        #[method(fileSystemRepresentation)]
        pub unsafe fn fileSystemRepresentation(&self) -> NonNull<c_char>;

        #[method(getFileSystemRepresentation:maxLength:)]
        pub unsafe fn getFileSystemRepresentation_maxLength(
            &self,
            cname: NonNull<c_char>,
            max: NSUInteger,
        ) -> bool;
    }
);

extern_methods!(
    /// NSArrayPathExtensions
    unsafe impl<ObjectType: Message> NSArray<ObjectType> {
        #[method_id(pathsMatchingExtensions:)]
        pub unsafe fn pathsMatchingExtensions(
            &self,
            filterTypes: &NSArray<NSString>,
        ) -> Id<NSArray<NSString>, Shared>;
    }
);

pub type NSSearchPathDirectory = NSUInteger;
pub const NSApplicationDirectory: NSSearchPathDirectory = 1;
pub const NSDemoApplicationDirectory: NSSearchPathDirectory = 2;
pub const NSDeveloperApplicationDirectory: NSSearchPathDirectory = 3;
pub const NSAdminApplicationDirectory: NSSearchPathDirectory = 4;
pub const NSLibraryDirectory: NSSearchPathDirectory = 5;
pub const NSDeveloperDirectory: NSSearchPathDirectory = 6;
pub const NSUserDirectory: NSSearchPathDirectory = 7;
pub const NSDocumentationDirectory: NSSearchPathDirectory = 8;
pub const NSDocumentDirectory: NSSearchPathDirectory = 9;
pub const NSCoreServiceDirectory: NSSearchPathDirectory = 10;
pub const NSAutosavedInformationDirectory: NSSearchPathDirectory = 11;
pub const NSDesktopDirectory: NSSearchPathDirectory = 12;
pub const NSCachesDirectory: NSSearchPathDirectory = 13;
pub const NSApplicationSupportDirectory: NSSearchPathDirectory = 14;
pub const NSDownloadsDirectory: NSSearchPathDirectory = 15;
pub const NSInputMethodsDirectory: NSSearchPathDirectory = 16;
pub const NSMoviesDirectory: NSSearchPathDirectory = 17;
pub const NSMusicDirectory: NSSearchPathDirectory = 18;
pub const NSPicturesDirectory: NSSearchPathDirectory = 19;
pub const NSPrinterDescriptionDirectory: NSSearchPathDirectory = 20;
pub const NSSharedPublicDirectory: NSSearchPathDirectory = 21;
pub const NSPreferencePanesDirectory: NSSearchPathDirectory = 22;
pub const NSApplicationScriptsDirectory: NSSearchPathDirectory = 23;
pub const NSItemReplacementDirectory: NSSearchPathDirectory = 99;
pub const NSAllApplicationsDirectory: NSSearchPathDirectory = 100;
pub const NSAllLibrariesDirectory: NSSearchPathDirectory = 101;
pub const NSTrashDirectory: NSSearchPathDirectory = 102;

pub type NSSearchPathDomainMask = NSUInteger;
pub const NSUserDomainMask: NSSearchPathDomainMask = 1;
pub const NSLocalDomainMask: NSSearchPathDomainMask = 2;
pub const NSNetworkDomainMask: NSSearchPathDomainMask = 4;
pub const NSSystemDomainMask: NSSearchPathDomainMask = 8;
pub const NSAllDomainsMask: NSSearchPathDomainMask = 65535;
