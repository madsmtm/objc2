//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

pub type NSValueTransformerName = NSString;

extern "C" {
    pub static NSNegateBooleanTransformerName: &'static NSValueTransformerName;
}

extern "C" {
    pub static NSIsNilTransformerName: &'static NSValueTransformerName;
}

extern "C" {
    pub static NSIsNotNilTransformerName: &'static NSValueTransformerName;
}

extern "C" {
    pub static NSUnarchiveFromDataTransformerName: &'static NSValueTransformerName;
}

extern "C" {
    pub static NSKeyedUnarchiveFromDataTransformerName: &'static NSValueTransformerName;
}

extern "C" {
    pub static NSSecureUnarchiveFromDataTransformerName: &'static NSValueTransformerName;
}

extern_class!(
    #[derive(Debug)]
    pub struct NSValueTransformer;

    unsafe impl ClassType for NSValueTransformer {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSValueTransformer {
        #[method(setValueTransformer:forName:)]
        pub unsafe fn setValueTransformer_forName(
            transformer: Option<&NSValueTransformer>,
            name: &NSValueTransformerName,
        );

        #[method_id(valueTransformerForName:)]
        pub unsafe fn valueTransformerForName(
            name: &NSValueTransformerName,
        ) -> Option<Id<NSValueTransformer, Shared>>;

        #[method_id(valueTransformerNames)]
        pub unsafe fn valueTransformerNames() -> Id<NSArray<NSValueTransformerName>, Shared>;

        #[method(transformedValueClass)]
        pub unsafe fn transformedValueClass() -> &'static Class;

        #[method(allowsReverseTransformation)]
        pub unsafe fn allowsReverseTransformation() -> bool;

        #[method_id(transformedValue:)]
        pub unsafe fn transformedValue(&self, value: Option<&Object>)
            -> Option<Id<Object, Shared>>;

        #[method_id(reverseTransformedValue:)]
        pub unsafe fn reverseTransformedValue(
            &self,
            value: Option<&Object>,
        ) -> Option<Id<Object, Shared>>;
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSSecureUnarchiveFromDataTransformer;

    unsafe impl ClassType for NSSecureUnarchiveFromDataTransformer {
        type Super = NSValueTransformer;
    }
);

extern_methods!(
    unsafe impl NSSecureUnarchiveFromDataTransformer {
        #[method_id(allowedTopLevelClasses)]
        pub unsafe fn allowedTopLevelClasses() -> Id<NSArray<TodoClass>, Shared>;
    }
);
