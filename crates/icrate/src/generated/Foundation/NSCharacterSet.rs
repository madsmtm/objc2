//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_enum!(
    #[underlying(c_uint)]
    pub enum {
        NSOpenStepUnicodeReservedBase = 0xF400,
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSCharacterSet;

    unsafe impl ClassType for NSCharacterSet {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSCharacterSet {
        #[method_id(@__retain_semantics Other controlCharacterSet)]
        pub unsafe fn controlCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other whitespaceCharacterSet)]
        pub unsafe fn whitespaceCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other whitespaceAndNewlineCharacterSet)]
        pub unsafe fn whitespaceAndNewlineCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other decimalDigitCharacterSet)]
        pub unsafe fn decimalDigitCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other letterCharacterSet)]
        pub unsafe fn letterCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other lowercaseLetterCharacterSet)]
        pub unsafe fn lowercaseLetterCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other uppercaseLetterCharacterSet)]
        pub unsafe fn uppercaseLetterCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other nonBaseCharacterSet)]
        pub unsafe fn nonBaseCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other alphanumericCharacterSet)]
        pub unsafe fn alphanumericCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other decomposableCharacterSet)]
        pub unsafe fn decomposableCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other illegalCharacterSet)]
        pub unsafe fn illegalCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other punctuationCharacterSet)]
        pub unsafe fn punctuationCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other capitalizedLetterCharacterSet)]
        pub unsafe fn capitalizedLetterCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other symbolCharacterSet)]
        pub unsafe fn symbolCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other newlineCharacterSet)]
        pub unsafe fn newlineCharacterSet() -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithRange:)]
        pub unsafe fn characterSetWithRange(aRange: NSRange) -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithCharactersInString:)]
        pub unsafe fn characterSetWithCharactersInString(
            aString: &NSString,
        ) -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithBitmapRepresentation:)]
        pub unsafe fn characterSetWithBitmapRepresentation(
            data: &NSData,
        ) -> Id<NSCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithContentsOfFile:)]
        pub unsafe fn characterSetWithContentsOfFile(
            fName: &NSString,
        ) -> Option<Id<NSCharacterSet, Shared>>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &NSCoder,
        ) -> Id<Self, Shared>;

        #[method(characterIsMember:)]
        pub unsafe fn characterIsMember(&self, aCharacter: unichar) -> bool;

        #[method_id(@__retain_semantics Other bitmapRepresentation)]
        pub unsafe fn bitmapRepresentation(&self) -> Id<NSData, Shared>;

        #[method_id(@__retain_semantics Other invertedSet)]
        pub unsafe fn invertedSet(&self) -> Id<NSCharacterSet, Shared>;

        #[method(longCharacterIsMember:)]
        pub unsafe fn longCharacterIsMember(&self, theLongChar: UTF32Char) -> bool;

        #[method(isSupersetOfSet:)]
        pub unsafe fn isSupersetOfSet(&self, theOtherSet: &NSCharacterSet) -> bool;

        #[method(hasMemberInPlane:)]
        pub unsafe fn hasMemberInPlane(&self, thePlane: u8) -> bool;
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSMutableCharacterSet;

    unsafe impl ClassType for NSMutableCharacterSet {
        type Super = NSCharacterSet;
    }
);

extern_methods!(
    unsafe impl NSMutableCharacterSet {
        #[method(addCharactersInRange:)]
        pub unsafe fn addCharactersInRange(&self, aRange: NSRange);

        #[method(removeCharactersInRange:)]
        pub unsafe fn removeCharactersInRange(&self, aRange: NSRange);

        #[method(addCharactersInString:)]
        pub unsafe fn addCharactersInString(&self, aString: &NSString);

        #[method(removeCharactersInString:)]
        pub unsafe fn removeCharactersInString(&self, aString: &NSString);

        #[method(formUnionWithCharacterSet:)]
        pub unsafe fn formUnionWithCharacterSet(&self, otherSet: &NSCharacterSet);

        #[method(formIntersectionWithCharacterSet:)]
        pub unsafe fn formIntersectionWithCharacterSet(&self, otherSet: &NSCharacterSet);

        #[method(invert)]
        pub unsafe fn invert(&self);

        #[method_id(@__retain_semantics Other controlCharacterSet)]
        pub unsafe fn controlCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other whitespaceCharacterSet)]
        pub unsafe fn whitespaceCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other whitespaceAndNewlineCharacterSet)]
        pub unsafe fn whitespaceAndNewlineCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other decimalDigitCharacterSet)]
        pub unsafe fn decimalDigitCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other letterCharacterSet)]
        pub unsafe fn letterCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other lowercaseLetterCharacterSet)]
        pub unsafe fn lowercaseLetterCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other uppercaseLetterCharacterSet)]
        pub unsafe fn uppercaseLetterCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other nonBaseCharacterSet)]
        pub unsafe fn nonBaseCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other alphanumericCharacterSet)]
        pub unsafe fn alphanumericCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other decomposableCharacterSet)]
        pub unsafe fn decomposableCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other illegalCharacterSet)]
        pub unsafe fn illegalCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other punctuationCharacterSet)]
        pub unsafe fn punctuationCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other capitalizedLetterCharacterSet)]
        pub unsafe fn capitalizedLetterCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other symbolCharacterSet)]
        pub unsafe fn symbolCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other newlineCharacterSet)]
        pub unsafe fn newlineCharacterSet() -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithRange:)]
        pub unsafe fn characterSetWithRange(aRange: NSRange) -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithCharactersInString:)]
        pub unsafe fn characterSetWithCharactersInString(
            aString: &NSString,
        ) -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithBitmapRepresentation:)]
        pub unsafe fn characterSetWithBitmapRepresentation(
            data: &NSData,
        ) -> Id<NSMutableCharacterSet, Shared>;

        #[method_id(@__retain_semantics Other characterSetWithContentsOfFile:)]
        pub unsafe fn characterSetWithContentsOfFile(
            fName: &NSString,
        ) -> Option<Id<NSMutableCharacterSet, Shared>>;
    }
);
