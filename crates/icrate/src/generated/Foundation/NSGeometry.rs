//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[allow(unused_imports)]
use objc2::rc::{Id, Shared};
#[allow(unused_imports)]
use objc2::{extern_class, extern_methods, ClassType};

pub type NSPoint = CGPoint;

pub type NSSize = CGSize;

pub type NSRect = CGRect;

pub type NSRectEdge = NSUInteger;
pub const NSRectEdgeMinX: NSRectEdge = 0;
pub const NSRectEdgeMinY: NSRectEdge = 1;
pub const NSRectEdgeMaxX: NSRectEdge = 2;
pub const NSRectEdgeMaxY: NSRectEdge = 3;
pub const NSMinXEdge: NSRectEdge = 0;
pub const NSMinYEdge: NSRectEdge = 1;
pub const NSMaxXEdge: NSRectEdge = 2;
pub const NSMaxYEdge: NSRectEdge = 3;

pub type NSAlignmentOptions = c_ulonglong;
pub const NSAlignMinXInward: NSAlignmentOptions = 1;
pub const NSAlignMinYInward: NSAlignmentOptions = 2;
pub const NSAlignMaxXInward: NSAlignmentOptions = 4;
pub const NSAlignMaxYInward: NSAlignmentOptions = 8;
pub const NSAlignWidthInward: NSAlignmentOptions = 16;
pub const NSAlignHeightInward: NSAlignmentOptions = 32;
pub const NSAlignMinXOutward: NSAlignmentOptions = 256;
pub const NSAlignMinYOutward: NSAlignmentOptions = 512;
pub const NSAlignMaxXOutward: NSAlignmentOptions = 1024;
pub const NSAlignMaxYOutward: NSAlignmentOptions = 2048;
pub const NSAlignWidthOutward: NSAlignmentOptions = 4096;
pub const NSAlignHeightOutward: NSAlignmentOptions = 8192;
pub const NSAlignMinXNearest: NSAlignmentOptions = 65536;
pub const NSAlignMinYNearest: NSAlignmentOptions = 131072;
pub const NSAlignMaxXNearest: NSAlignmentOptions = 262144;
pub const NSAlignMaxYNearest: NSAlignmentOptions = 524288;
pub const NSAlignWidthNearest: NSAlignmentOptions = 1048576;
pub const NSAlignHeightNearest: NSAlignmentOptions = 2097152;
pub const NSAlignRectFlipped: NSAlignmentOptions = -9223372036854775808;
pub const NSAlignAllEdgesInward: NSAlignmentOptions = 15;
pub const NSAlignAllEdgesOutward: NSAlignmentOptions = 3840;
pub const NSAlignAllEdgesNearest: NSAlignmentOptions = 983040;

extern_methods!(
    /// NSValueGeometryExtensions
    unsafe impl NSValue {
        #[method_id(valueWithPoint:)]
        pub unsafe fn valueWithPoint(point: NSPoint) -> Id<NSValue, Shared>;

        #[method_id(valueWithSize:)]
        pub unsafe fn valueWithSize(size: NSSize) -> Id<NSValue, Shared>;

        #[method_id(valueWithRect:)]
        pub unsafe fn valueWithRect(rect: NSRect) -> Id<NSValue, Shared>;

        #[method_id(valueWithEdgeInsets:)]
        pub unsafe fn valueWithEdgeInsets(insets: NSEdgeInsets) -> Id<NSValue, Shared>;

        #[method(pointValue)]
        pub unsafe fn pointValue(&self) -> NSPoint;

        #[method(sizeValue)]
        pub unsafe fn sizeValue(&self) -> NSSize;

        #[method(rectValue)]
        pub unsafe fn rectValue(&self) -> NSRect;

        #[method(edgeInsetsValue)]
        pub unsafe fn edgeInsetsValue(&self) -> NSEdgeInsets;
    }
);

extern_methods!(
    /// NSGeometryCoding
    unsafe impl NSCoder {
        #[method(encodePoint:)]
        pub unsafe fn encodePoint(&self, point: NSPoint);

        #[method(decodePoint)]
        pub unsafe fn decodePoint(&self) -> NSPoint;

        #[method(encodeSize:)]
        pub unsafe fn encodeSize(&self, size: NSSize);

        #[method(decodeSize)]
        pub unsafe fn decodeSize(&self) -> NSSize;

        #[method(encodeRect:)]
        pub unsafe fn encodeRect(&self, rect: NSRect);

        #[method(decodeRect)]
        pub unsafe fn decodeRect(&self) -> NSRect;
    }
);

extern_methods!(
    /// NSGeometryKeyedCoding
    unsafe impl NSCoder {
        #[method(encodePoint:forKey:)]
        pub unsafe fn encodePoint_forKey(&self, point: NSPoint, key: &NSString);

        #[method(encodeSize:forKey:)]
        pub unsafe fn encodeSize_forKey(&self, size: NSSize, key: &NSString);

        #[method(encodeRect:forKey:)]
        pub unsafe fn encodeRect_forKey(&self, rect: NSRect, key: &NSString);

        #[method(decodePointForKey:)]
        pub unsafe fn decodePointForKey(&self, key: &NSString) -> NSPoint;

        #[method(decodeSizeForKey:)]
        pub unsafe fn decodeSizeForKey(&self, key: &NSString) -> NSSize;

        #[method(decodeRectForKey:)]
        pub unsafe fn decodeRectForKey(&self, key: &NSString) -> NSRect;
    }
);
