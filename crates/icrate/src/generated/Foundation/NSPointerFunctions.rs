//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

ns_options!(
    #[underlying(NSUInteger)]
    pub enum NSPointerFunctionsOptions {
        NSPointerFunctionsStrongMemory = 0 << 0,
        NSPointerFunctionsZeroingWeakMemory = 1 << 0,
        NSPointerFunctionsOpaqueMemory = 2 << 0,
        NSPointerFunctionsMallocMemory = 3 << 0,
        NSPointerFunctionsMachVirtualMemory = 4 << 0,
        NSPointerFunctionsWeakMemory = 5 << 0,
        NSPointerFunctionsObjectPersonality = 0 << 8,
        NSPointerFunctionsOpaquePersonality = 1 << 8,
        NSPointerFunctionsObjectPointerPersonality = 2 << 8,
        NSPointerFunctionsCStringPersonality = 3 << 8,
        NSPointerFunctionsStructPersonality = 4 << 8,
        NSPointerFunctionsIntegerPersonality = 5 << 8,
        NSPointerFunctionsCopyIn = 1 << 16,
    }
);

extern_class!(
    #[derive(Debug)]
    pub struct NSPointerFunctions;

    unsafe impl ClassType for NSPointerFunctions {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl NSPointerFunctions {
        #[method_id(@__retain_semantics Init initWithOptions:)]
        pub unsafe fn initWithOptions(
            this: Option<Allocated<Self>>,
            options: NSPointerFunctionsOptions,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Other pointerFunctionsWithOptions:)]
        pub unsafe fn pointerFunctionsWithOptions(
            options: NSPointerFunctionsOptions,
        ) -> Id<NSPointerFunctions, Shared>;

        #[method(hashFunction)]
        pub unsafe fn hashFunction(&self) -> *mut TodoFunction;

        #[method(setHashFunction:)]
        pub unsafe fn setHashFunction(&self, hashFunction: *mut TodoFunction);

        #[method(isEqualFunction)]
        pub unsafe fn isEqualFunction(&self) -> *mut TodoFunction;

        #[method(setIsEqualFunction:)]
        pub unsafe fn setIsEqualFunction(&self, isEqualFunction: *mut TodoFunction);

        #[method(sizeFunction)]
        pub unsafe fn sizeFunction(&self) -> *mut TodoFunction;

        #[method(setSizeFunction:)]
        pub unsafe fn setSizeFunction(&self, sizeFunction: *mut TodoFunction);

        #[method(descriptionFunction)]
        pub unsafe fn descriptionFunction(&self) -> *mut TodoFunction;

        #[method(setDescriptionFunction:)]
        pub unsafe fn setDescriptionFunction(&self, descriptionFunction: *mut TodoFunction);

        #[method(relinquishFunction)]
        pub unsafe fn relinquishFunction(&self) -> *mut TodoFunction;

        #[method(setRelinquishFunction:)]
        pub unsafe fn setRelinquishFunction(&self, relinquishFunction: *mut TodoFunction);

        #[method(acquireFunction)]
        pub unsafe fn acquireFunction(&self) -> *mut TodoFunction;

        #[method(setAcquireFunction:)]
        pub unsafe fn setAcquireFunction(&self, acquireFunction: *mut TodoFunction);

        #[method(usesStrongWriteBarrier)]
        pub unsafe fn usesStrongWriteBarrier(&self) -> bool;

        #[method(setUsesStrongWriteBarrier:)]
        pub unsafe fn setUsesStrongWriteBarrier(&self, usesStrongWriteBarrier: bool);

        #[method(usesWeakReadAndWriteBarriers)]
        pub unsafe fn usesWeakReadAndWriteBarriers(&self) -> bool;

        #[method(setUsesWeakReadAndWriteBarriers:)]
        pub unsafe fn setUsesWeakReadAndWriteBarriers(&self, usesWeakReadAndWriteBarriers: bool);
    }
);
