framework = "Network"
crate = "objc2-network"
required-crates = ["block2", "dispatch2"]
custom-lib-rs = true
flags = [
    # Generate nw_release/nw_retain
    "-DOS_OBJECT_USE_OBJC_RETAIN_RELEASE=0",
]

macos = "10.14"
maccatalyst = "13.0"
ios = "12.0"
tvos = "12.0"
watchos = "6.0"
visionos = "1.0"

unsafe-default-safety.functions = true

# Enum generated with integer identifiers
const.nw_ip_version_any.renamed = "any"
const.nw_ip_version_4.renamed = "v4"
const.nw_ip_version_6.renamed = "v6"

# Enum generated with integer identifiers
const.nw_multipath_version_unspecified.renamed = "unspecified"
const.nw_multipath_version_0.renamed = "v0"
const.nw_multipath_version_1.renamed = "v1"

# Enum generated with integer identifiers
const.nw_ws_version_invalid.renamed = "invalid"
const.nw_ws_version_13.renamed = "v13"

# We custom-define these instead.
typedef.nw_object_t.skipped = true
protocol.OS_nw_object.skipped = true

# ethernet_channel.h
# typedef.nw_ethernet_channel_t.skipped = true
# protocol.OS_nw_ethernet_channel.skipped = true

# ethernet_channel.h
# fixme: Generated as ArrayUnknownABI
typedef.nw_ethernet_address_t.skipped = true

# fixme: Return pointer to pointer which does not work with Retained::from_raw()
fn.nw_quic_copy_sec_protocol_options.skipped = true
fn.nw_tls_copy_sec_protocol_metadata.skipped = true
fn.nw_quic_copy_sec_protocol_metadata.skipped = true
fn.nw_tls_copy_sec_protocol_options.skipped = true
