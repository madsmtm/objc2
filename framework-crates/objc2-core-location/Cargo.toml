# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-location"
version.workspace = true
description = "Bindings to the CoreLocation framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
block2 = { workspace = true, optional = true, features = ["alloc"] }
dispatch2 = { workspace = true, optional = true, features = [
    "alloc",
    "objc2",
] }
objc2 = { workspace = true, features = ["std"] }
objc2-foundation = { workspace = true, features = ["alloc"] }

[target.'cfg(not(target_os = "tvos"))'.dependencies]
objc2-contacts = { workspace = true, optional = true, features = ["CNPostalAddress"] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]

[features]
default = [
    "std",
    "CLAvailability",
    "CLBackgroundActivitySession",
    "CLBeaconIdentityCondition",
    "CLBeaconIdentityConstraint",
    "CLBeaconRegion",
    "CLCircularGeographicCondition",
    "CLCircularRegion",
    "CLCondition",
    "CLError",
    "CLErrorDomain",
    "CLGeocoder",
    "CLHeading",
    "CLLocation",
    "CLLocationManager",
    "CLLocationManagerDelegate",
    "CLLocationManager_CLVisitExtensions",
    "CLLocationPushServiceError",
    "CLLocationPushServiceExtension",
    "CLLocationUpdater",
    "CLMonitor",
    "CLMonitorConfiguration",
    "CLMonitoringEvent",
    "CLMonitoringRecord",
    "CLPlacemark",
    "CLRegion",
    "CLServiceSession",
    "CLVisit",
    "block2",
    "dispatch2",
    "objc2-contacts",
]
std = ["alloc"]
alloc = []
block2 = ["dep:block2"]
dispatch2 = ["dep:dispatch2"]
objc2-contacts = ["dep:objc2-contacts"]

CLAvailability = []
CLBackgroundActivitySession = []
CLBeaconIdentityCondition = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CLBeaconIdentityConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSUUID",
]
CLBeaconRegion = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CLCircularGeographicCondition = ["objc2-foundation/NSObject"]
CLCircularRegion = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLCondition = ["objc2-foundation/NSObject"]
CLError = ["objc2-foundation/NSString"]
CLErrorDomain = ["objc2-foundation/NSString"]
CLGeocoder = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSLocale",
    "objc2-foundation/NSString",
]
CLHeading = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
]
CLLocation = []
CLLocationManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSError",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
CLLocationManagerDelegate = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
]
CLLocationManager_CLVisitExtensions = []
CLLocationPushServiceError = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
CLLocationPushServiceExtension = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
CLLocationUpdater = []
CLMonitor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
CLMonitorConfiguration = ["objc2-foundation/NSString"]
CLMonitoringEvent = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLMonitoringRecord = ["objc2-foundation/NSObject"]
CLPlacemark = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSTimeZone",
]
CLRegion = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLServiceSession = ["objc2-foundation/NSString"]
CLVisit = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
]
