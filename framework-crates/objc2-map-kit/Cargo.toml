# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-map-kit"
version = "0.2.2" # Remember to update html_root_url in lib.rs
description = "Bindings to the MapKit framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
bitflags = { version = "2.5.0", default-features = false, optional = true }
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-core-location = { path = "../objc2-core-location", version = "0.2.2", default-features = false, optional = true }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.2", default-features = false }

[target.'cfg(target_os = "macos")'.dependencies]
objc2-app-kit = { path = "../objc2-app-kit", version = "0.2.2", default-features = false, optional = true }

[target.'cfg(not(target_os = "tvos"))'.dependencies]
objc2-contacts = { path = "../objc2-contacts", version = "0.2.2", default-features = false, optional = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "bitflags?/std", "block2?/std", "objc2/std", "objc2-app-kit?/std", "objc2-contacts?/std", "objc2-core-location?/std", "objc2-foundation/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-app-kit?/alloc", "objc2-contacts?/alloc", "objc2-core-location?/alloc", "objc2-foundation/alloc"]
bitflags = ["dep:bitflags", "objc2-app-kit?/bitflags", "objc2-foundation/bitflags"]
block2 = ["dep:block2", "objc2-app-kit?/block2", "objc2-contacts?/block2", "objc2-core-location?/block2", "objc2-foundation/block2"]
objc2-app-kit = ["dep:objc2-app-kit"]
objc2-contacts = ["dep:objc2-contacts", "objc2-core-location?/objc2-contacts"]
objc2-core-location = ["dep:objc2-core-location"]

MKAnnotation = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSString",
]
MKAnnotationView = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSImage",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKCircle = ["objc2-core-location?/CLLocation"]
MKCircleRenderer = ["objc2-foundation/NSGeometry"]
MKClusterAnnotation = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MKCompassButton = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
MKDirections = ["objc2-foundation/NSError"]
MKDirectionsRequest = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSURL",
]
MKDirectionsResponse = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSString",
]
MKDirectionsTypes = ["bitflags"]
MKDistanceFormatter = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSFormatter",
    "objc2-foundation/NSLocale",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKFoundation = []
MKGeoJSONSerialization = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MKGeodesicPolyline = ["objc2-core-location?/CLLocation"]
MKGeometry = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSValue",
]
MKGradientPolylineRenderer = [
    "objc2-app-kit?/NSColor",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MKHybridMapConfiguration = ["objc2-foundation/NSObject"]
MKImageryMapConfiguration = ["objc2-foundation/NSObject"]
MKLocalPointsOfInterestRequest = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSObject",
]
MKLocalSearch = ["objc2-foundation/NSError"]
MKLocalSearchCompleter = [
    "bitflags",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MKLocalSearchRequest = [
    "bitflags",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKLocalSearchResponse = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
]
MKLookAroundScene = ["objc2-foundation/NSObject"]
MKLookAroundSceneRequest = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSError",
]
MKLookAroundSnapshot = ["objc2-app-kit?/NSImage"]
MKLookAroundSnapshotOptions = ["objc2-foundation/NSGeometry"]
MKLookAroundSnapshotter = ["objc2-foundation/NSError"]
MKLookAroundViewController = [
    "objc2-app-kit?/NSKeyValueBinding",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSStoryboardSegue",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSViewController",
    "objc2-foundation/NSBundle",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKMapCamera = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
MKMapCameraBoundary = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSObject",
]
MKMapCameraZoomRange = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSObject",
]
MKMapConfiguration = ["objc2-foundation/NSObject"]
MKMapItem = [
    "objc2-core-location?/CLPlacemark",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSTimeZone",
    "objc2-foundation/NSURL",
]
MKMapSnapshot = [
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSImage",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSGeometry",
]
MKMapSnapshotOptions = [
    "objc2-app-kit?/NSAppearance",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
MKMapSnapshotter = ["objc2-foundation/NSError"]
MKMapView = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
MKMarkerAnnotationView = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSColor",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSImage",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKMultiPoint = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSIndexSet",
    "objc2-foundation/NSRange",
    "objc2-foundation/NSValue",
]
MKMultiPolygon = ["objc2-foundation/NSArray"]
MKMultiPolygonRenderer = []
MKMultiPolyline = ["objc2-foundation/NSArray"]
MKMultiPolylineRenderer = []
MKOverlay = ["objc2-core-location?/CLLocation"]
MKOverlayPathRenderer = [
    "objc2-app-kit?/NSColor",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSValue",
]
MKOverlayRenderer = ["objc2-foundation/NSGeometry"]
MKPinAnnotationView = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSColor",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKPitchControl = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
MKPlacemark = [
    "objc2-contacts?/CNPostalAddress",
    "objc2-core-location?/CLLocation",
    "objc2-core-location?/CLPlacemark",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKPointAnnotation = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSString",
]
MKPointOfInterestCategory = ["objc2-foundation/NSString"]
MKPointOfInterestFilter = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKPolygon = [
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSArray",
]
MKPolygonRenderer = ["objc2-foundation/NSGeometry"]
MKPolyline = ["objc2-core-location?/CLLocation"]
MKPolylineRenderer = ["objc2-foundation/NSGeometry"]
MKShape = ["objc2-foundation/NSString"]
MKStandardMapConfiguration = ["objc2-foundation/NSObject"]
MKTileOverlay = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MKTileOverlayRenderer = []
MKTypes = ["objc2-foundation/NSString"]
MKUserLocation = [
    "objc2-core-location?/CLHeading",
    "objc2-core-location?/CLLocation",
    "objc2-foundation/NSString",
]
MKUserLocationView = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MKZoomControl = [
    "objc2-app-kit?/NSAccessibilityProtocols",
    "objc2-app-kit?/NSAnimation",
    "objc2-app-kit?/NSAppearance",
    "objc2-app-kit?/NSDragging",
    "objc2-app-kit?/NSResponder",
    "objc2-app-kit?/NSUserInterfaceItemIdentification",
    "objc2-app-kit?/NSView",
    "objc2-foundation/NSCoder",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
NSUserActivity_MKMapItem = ["objc2-foundation/NSUserActivity"]
all = [
    "MKAnnotation",
    "MKAnnotationView",
    "MKCircle",
    "MKCircleRenderer",
    "MKClusterAnnotation",
    "MKCompassButton",
    "MKDirections",
    "MKDirectionsRequest",
    "MKDirectionsResponse",
    "MKDirectionsTypes",
    "MKDistanceFormatter",
    "MKFoundation",
    "MKGeoJSONSerialization",
    "MKGeodesicPolyline",
    "MKGeometry",
    "MKGradientPolylineRenderer",
    "MKHybridMapConfiguration",
    "MKImageryMapConfiguration",
    "MKLocalPointsOfInterestRequest",
    "MKLocalSearch",
    "MKLocalSearchCompleter",
    "MKLocalSearchRequest",
    "MKLocalSearchResponse",
    "MKLookAroundScene",
    "MKLookAroundSceneRequest",
    "MKLookAroundSnapshot",
    "MKLookAroundSnapshotOptions",
    "MKLookAroundSnapshotter",
    "MKLookAroundViewController",
    "MKMapCamera",
    "MKMapCameraBoundary",
    "MKMapCameraZoomRange",
    "MKMapConfiguration",
    "MKMapItem",
    "MKMapSnapshot",
    "MKMapSnapshotOptions",
    "MKMapSnapshotter",
    "MKMapView",
    "MKMarkerAnnotationView",
    "MKMultiPoint",
    "MKMultiPolygon",
    "MKMultiPolygonRenderer",
    "MKMultiPolyline",
    "MKMultiPolylineRenderer",
    "MKOverlay",
    "MKOverlayPathRenderer",
    "MKOverlayRenderer",
    "MKPinAnnotationView",
    "MKPitchControl",
    "MKPlacemark",
    "MKPointAnnotation",
    "MKPointOfInterestCategory",
    "MKPointOfInterestFilter",
    "MKPolygon",
    "MKPolygonRenderer",
    "MKPolyline",
    "MKPolylineRenderer",
    "MKShape",
    "MKStandardMapConfiguration",
    "MKTileOverlay",
    "MKTileOverlayRenderer",
    "MKTypes",
    "MKUserLocation",
    "MKUserLocationView",
    "MKZoomControl",
    "NSUserActivity_MKMapItem",
    "bitflags",
    "block2",
    "objc2-app-kit",
    "objc2-contacts",
    "objc2-core-location",
]
