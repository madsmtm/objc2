framework = "AVFoundation"
crate = "objc2-av-foundation"
required-crates = ["objc2", "objc2-foundation"]
custom-lib-rs = true
macos = "10.7"
maccatalyst = "13.1"
ios = "2.2"
tvos = "9.0"
watchos = "3.0"
visionos = "1.0"

external.CIImage.module = "CoreImage.CIImage"
external.CIContext.module = "CoreImage.CIContext"
external.CIBarcodeDescriptor.module = "CoreImage.CIBarcodeDescriptor"

# Only available on iOS
class.AVAsset.methods.preferredDisplayCriteria.skipped = true

# Needs CASpatialAudioExperience, which is not available on macOS (where header-translator runs).
class.AVPlayer.methods.intendedSpatialAudioExperience.skipped = true
class.AVPlayer.methods."setIntendedSpatialAudioExperience:".skipped = true
class.AVSampleBufferRenderSynchronizer.methods.intendedSpatialAudioExperience.skipped = true
class.AVSampleBufferRenderSynchronizer.methods."setIntendedSpatialAudioExperience:".skipped = true

# CG*Ref as error return is not yet supported
class.AVAssetImageGenerator.methods."copyCGImageAtTime:actualTime:error:".skipped = true
protocol.AVCapturePhotoCaptureDelegate.methods."captureOutput:didFinishProcessingPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:".skipped = true
protocol.AVCapturePhotoCaptureDelegate.methods."captureOutput:didFinishProcessingRawPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:".skipped = true
class.AVSampleBufferGenerator.methods."createSampleBufferForRequest:error:".skipped = true
class.AVSampleBufferGenerator.methods."createSampleBufferForRequest:addingToBatch:error:".skipped = true

# Unclear error return
protocol.AVAsynchronousKeyValueLoading.methods."statusOfValueForKey:error:".skipped = true
class.AVMetadataItem.methods."statusOfValueForKey:error:".skipped = true

# Counterparts
class.AVAssetDownloadStorageManagementPolicy.counterpart = "MutableSubclass(AVFoundation.AVAssetDownloadStorageManager.AVMutableAssetDownloadStorageManagementPolicy)"
class.AVMutableAssetDownloadStorageManagementPolicy.counterpart = "ImmutableSuperclass(AVFoundation.AVAssetDownloadStorageManager.AVAssetDownloadStorageManagementPolicy)"
class.AVAudioMix.counterpart = "MutableSubclass(AVFoundation.AVAudioMix.AVMutableAudioMix)"
class.AVMutableAudioMix.counterpart = "ImmutableSuperclass(AVFoundation.AVAudioMix.AVAudioMix)"
class.AVAudioMixInputParameters.counterpart = "MutableSubclass(AVFoundation.AVAudioMix.AVMutableAudioMixInputParameters)"
class.AVMutableAudioMixInputParameters.counterpart = "ImmutableSuperclass(AVFoundation.AVAudioMix.AVAudioMixInputParameters)"
class.AVMediaSelection.counterpart = "MutableSubclass(AVFoundation.AVMediaSelection.AVMutableMediaSelection)"
class.AVMutableMediaSelection.counterpart = "ImmutableSuperclass(AVFoundation.AVMediaSelection.AVMediaSelection)"
class.AVMetadataItem.counterpart = "MutableSubclass(AVFoundation.AVMetadataItem.AVMutableMetadataItem)"
class.AVMutableMetadataItem.counterpart = "ImmutableSuperclass(AVFoundation.AVMetadataItem.AVMetadataItem)"
class.AVMovie.counterpart = "MutableSubclass(AVFoundation.AVMovie.AVMutableMovie)"
class.AVMutableMovie.counterpart = "ImmutableSuperclass(AVFoundation.AVMovie.AVMovie)"
class.AVFragmentedMovie.skipped-protocols = ["NSCopying", "NSMutableCopying"] # Unclear what type these return
class.AVTimedMetadataGroup.counterpart = "MutableSubclass(AVFoundation.AVTimedMetadataGroup.AVMutableTimedMetadataGroup)"
class.AVMutableTimedMetadataGroup.counterpart = "ImmutableSuperclass(AVFoundation.AVTimedMetadataGroup.AVTimedMetadataGroup)"
class.AVDateRangeMetadataGroup.counterpart = "MutableSubclass(AVFoundation.AVTimedMetadataGroup.AVMutableDateRangeMetadataGroup)"
class.AVMutableDateRangeMetadataGroup.counterpart = "ImmutableSuperclass(AVFoundation.AVTimedMetadataGroup.AVDateRangeMetadataGroup)"
class.AVVideoComposition.counterpart = "MutableSubclass(AVFoundation.AVVideoComposition.AVMutableVideoComposition)"
class.AVMutableVideoComposition.counterpart = "ImmutableSuperclass(AVFoundation.AVVideoComposition.AVVideoComposition)"
class.AVVideoCompositionInstruction.counterpart = "MutableSubclass(AVFoundation.AVVideoComposition.AVMutableVideoCompositionInstruction)"
class.AVMutableVideoCompositionInstruction.counterpart = "ImmutableSuperclass(AVFoundation.AVVideoComposition.AVVideoCompositionInstruction)"
class.AVVideoCompositionLayerInstruction.counterpart = "MutableSubclass(AVFoundation.AVVideoComposition.AVMutableVideoCompositionLayerInstruction)"
class.AVMutableVideoCompositionLayerInstruction.counterpart = "ImmutableSuperclass(AVFoundation.AVVideoComposition.AVVideoCompositionInstruction)"
class.AVCaption.counterpart = "MutableSubclass(AVFoundation.AVCaption.AVMutableCaption)"
class.AVMutableCaption.counterpart = "ImmutableSuperclass(AVFoundation.AVCaption.AVCaption)"
class.AVCaptionRegion.counterpart = "MutableSubclass(AVFoundation.AVCaption.AVMutableCaptionRegion)"
class.AVMutableCaptionRegion.counterpart = "ImmutableSuperclass(AVFoundation.AVCaption.AVCaptionRegion)"
class.AVComposition.counterpart = "MutableSubclass(AVFoundation.AVComposition.AVMutableComposition)"
class.AVMutableComposition.counterpart = "ImmutableSuperclass(AVFoundation.AVComposition.AVComposition)"

# Both protocols and classes
protocol.AVVideoCompositionInstruction.renamed = "AVVideoCompositionInstructionProtocol"

# Property declared twice in MutableEvents
class.AVPlayerInterstitialEvent.categories.MutableEvents.skipped = true
