# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-image"
version = "0.2.2" # Remember to update html_root_url in lib.rs
description = "Bindings to the CoreImage framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.2", default-features = false }
objc2-metal = { path = "../objc2-metal", version = "0.2.2", default-features = false, optional = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "block2?/std", "objc2/std", "objc2-foundation/std", "objc2-metal?/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-foundation/alloc", "objc2-metal?/alloc"]
apple = []
gnustep-1-7 = ["objc2/gnustep-1-7", "block2?/gnustep-1-7", "objc2-foundation/gnustep-1-7"]
gnustep-1-8 = ["gnustep-1-7", "objc2/gnustep-1-8", "block2?/gnustep-1-8", "objc2-foundation/gnustep-1-8"]
gnustep-1-9 = ["gnustep-1-8", "objc2/gnustep-1-9", "block2?/gnustep-1-9", "objc2-foundation/gnustep-1-9"]
gnustep-2-0 = ["gnustep-1-9", "objc2/gnustep-2-0", "block2?/gnustep-2-0", "objc2-foundation/gnustep-2-0"]
gnustep-2-1 = ["gnustep-2-0", "objc2/gnustep-2-1", "block2?/gnustep-2-1", "objc2-foundation/gnustep-2-1"]
block2 = ["dep:block2", "objc2-foundation/block2", "objc2-metal?/block2"]
objc2-metal = ["dep:objc2-metal"]

CIBarcodeDescriptor = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSUserActivity",
]
CIColor = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CIContext = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
    "objc2-metal?/MTLCommandQueue",
    "objc2-metal?/MTLDevice",
]
CIDetector = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
CIFeature = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CIFilter = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
CIFilterConstructor = ["objc2-foundation/NSString"]
CIFilterGenerator = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
CIFilterShape = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
CIImage = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
    "objc2-metal?/MTLResource",
    "objc2-metal?/MTLTexture",
]
CIImageAccumulator = ["objc2-foundation/NSGeometry"]
CIImageProcessor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSString",
    "objc2-metal?/MTLCommandBuffer",
    "objc2-metal?/MTLResource",
    "objc2-metal?/MTLTexture",
]
CIImageProvider = ["objc2-foundation/NSString"]
CIKernel = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSString",
]
CIKernelMetalLib = []
CIPlugIn = ["objc2-foundation/NSURL"]
CIPlugInInterface = []
CIRAWFilter = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
CIRAWFilter_Deprecated = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
CIRenderDestination = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSError",
    "objc2-foundation/NSGeometry",
    "objc2-metal?/MTLCommandBuffer",
    "objc2-metal?/MTLPixelFormat",
    "objc2-metal?/MTLResource",
    "objc2-metal?/MTLTexture",
]
CISampler = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CIVector = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CoreImageDefines = []
all = [
    "CIBarcodeDescriptor",
    "CIColor",
    "CIContext",
    "CIDetector",
    "CIFeature",
    "CIFilter",
    "CIFilterConstructor",
    "CIFilterGenerator",
    "CIFilterShape",
    "CIImage",
    "CIImageAccumulator",
    "CIImageProcessor",
    "CIImageProvider",
    "CIKernel",
    "CIKernelMetalLib",
    "CIPlugIn",
    "CIPlugInInterface",
    "CIRAWFilter",
    "CIRAWFilter_Deprecated",
    "CIRenderDestination",
    "CISampler",
    "CIVector",
    "CoreImageDefines",
    "block2",
    "objc2-metal",
]
