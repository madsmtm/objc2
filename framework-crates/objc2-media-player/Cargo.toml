# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-media-player"
version.workspace = true
description = "Bindings to the MediaPlayer framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
objc2 = { workspace = true, features = ["std"] }
objc2-av-foundation = { workspace = true, optional = true, features = [
    "AVMediaSelectionGroup",
    "AVPlayer",
    "AVPlayerItem",
] }
objc2-core-foundation = { workspace = true, optional = true, features = [
    "CFCGTypes",
    "objc2",
] }
objc2-core-media = { workspace = true, optional = true, features = [
    "CMTime",
    "CMTimeRange",
    "objc2",
] }
objc2-foundation = { workspace = true, features = ["alloc"] }

[target.'cfg(target_os = "macos")'.dependencies]
objc2-app-kit = { workspace = true, optional = true, features = ["NSImage"] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]
features = ["objc2-core-media"]

[features]
default = [
    "std",
    "AVFoundation_MPNowPlayingInfoLanguageOptionAdditions",
    "AVPlayerItem_MediaPlayerAdditions",
    "MPContentItem",
    "MPError",
    "MPMediaEntity",
    "MPMediaItem",
    "MPMediaItemCollection",
    "MPMediaLibrary",
    "MPMediaPickerController",
    "MPMediaPlayback",
    "MPMediaPlaylist",
    "MPMediaQuery",
    "MPMediaQuerySection",
    "MPMoviePlayerController",
    "MPMoviePlayerViewController",
    "MPMusicPlayerApplicationController",
    "MPMusicPlayerController",
    "MPMusicPlayerQueueDescriptor",
    "MPNowPlayingInfoCenter",
    "MPNowPlayingInfoLanguageOption",
    "MPNowPlayingSession",
    "MPPlayableContentDataSource",
    "MPPlayableContentDelegate",
    "MPPlayableContentManager",
    "MPPlayableContentManagerContext",
    "MPRemoteCommand",
    "MPRemoteCommandCenter",
    "MPRemoteCommandEvent",
    "MPRemoteControlTypes",
    "MPVolumeSettings",
    "MPVolumeView",
    "MediaPlayerDefines",
    "NSUserActivity_MediaPlayerAdditions",
    "bitflags",
    "block2",
    "objc2-app-kit",
    "objc2-av-foundation",
    "objc2-core-foundation",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
objc2-app-kit = ["dep:objc2-app-kit"]
objc2-av-foundation = ["dep:objc2-av-foundation"]
objc2-core-foundation = ["dep:objc2-core-foundation"]
objc2-core-media = ["dep:objc2-core-media"]

AVFoundation_MPNowPlayingInfoLanguageOptionAdditions = []
AVPlayerItem_MediaPlayerAdditions = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MPContentItem = ["objc2-foundation/NSString"]
MPError = ["objc2-foundation/NSString"]
MPMediaEntity = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
MPMediaItem = [
    "bitflags",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MPMediaItemCollection = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
]
MPMediaLibrary = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
]
MPMediaPickerController = []
MPMediaPlayback = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSString",
]
MPMediaPlaylist = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MPMediaQuery = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
MPMediaQuerySection = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSRange",
    "objc2-foundation/NSString",
]
MPMoviePlayerController = []
MPMoviePlayerViewController = []
MPMusicPlayerApplicationController = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MPMusicPlayerController = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSNotification",
    "objc2-foundation/NSString",
]
MPMusicPlayerQueueDescriptor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MPNowPlayingInfoCenter = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MPNowPlayingInfoLanguageOption = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MPNowPlayingSession = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
]
MPPlayableContentDataSource = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSIndexPath",
    "objc2-foundation/NSString",
]
MPPlayableContentDelegate = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSIndexPath",
]
MPPlayableContentManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MPPlayableContentManagerContext = []
MPRemoteCommand = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MPRemoteCommandCenter = []
MPRemoteCommandEvent = ["objc2-foundation/NSDate"]
MPRemoteControlTypes = []
MPVolumeSettings = []
MPVolumeView = []
MediaPlayerDefines = []
NSUserActivity_MediaPlayerAdditions = [
    "objc2-foundation/NSString",
    "objc2-foundation/NSUserActivity",
]
