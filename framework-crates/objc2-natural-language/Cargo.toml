# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-natural-language"
version = "0.2.2" # Remember to update html_root_url in lib.rs
description = "Bindings to the NaturalLanguage framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
bitflags = { version = "2.5.0", default-features = false, optional = true }
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.2", default-features = false }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "bitflags?/std", "block2?/std", "objc2/std", "objc2-foundation/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-foundation/alloc"]
bitflags = ["dep:bitflags", "objc2-foundation/bitflags"]
block2 = ["dep:block2", "objc2-foundation/block2"]

NLContextualEmbedding = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSRange",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NLEmbedding = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSIndexSet",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
    "objc2-foundation/NSValue",
]
NLGazetteer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
NLLanguage = ["objc2-foundation/NSString"]
NLLanguageRecognizer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NLModel = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSIndexSet",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
    "objc2-foundation/NSValue",
]
NLScript = ["objc2-foundation/NSString"]
NLTagScheme = ["objc2-foundation/NSString"]
NLTagger = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSOrthography",
    "objc2-foundation/NSRange",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NLTokenizer = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSRange",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
all = [
    "NLContextualEmbedding",
    "NLEmbedding",
    "NLGazetteer",
    "NLLanguage",
    "NLLanguageRecognizer",
    "NLModel",
    "NLScript",
    "NLTagScheme",
    "NLTagger",
    "NLTokenizer",
    "bitflags",
    "block2",
]
