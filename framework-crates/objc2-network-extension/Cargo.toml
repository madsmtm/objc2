# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-network-extension"
version = "0.2.2" # Remember to update html_root_url in lib.rs
description = "Bindings to the NetworkExtension framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
libc = { version = "0.2.80", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.2", default-features = false }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "block2?/std", "libc?/std", "objc2/std", "objc2-foundation/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-foundation/alloc"]
block2 = ["dep:block2", "objc2-foundation/block2"]
libc = ["dep:libc", "objc2-foundation/libc"]

NEAppProxyFlow = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEAppProxyProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEAppProxyProviderManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
]
NEAppProxyTCPFlow = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
]
NEAppProxyUDPFlow = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
]
NEAppPushManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEAppPushProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEAppRule = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEDNSProxyManager = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEDNSProxyProvider = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEDNSProxyProviderProtocol = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEDNSSettings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
NEDNSSettingsManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEEthernetTunnelNetworkSettings = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEEthernetTunnelProvider = []
NEFilterControlProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
NEFilterDataProvider = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEFilterFlow = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
    "objc2-foundation/NSURLRequest",
    "objc2-foundation/NSURLResponse",
    "objc2-foundation/NSUUID",
]
NEFilterManager = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEFilterPacketProvider = []
NEFilterProvider = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEFilterProviderConfiguration = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEFilterRule = ["objc2-foundation/NSObject"]
NEFilterSettings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
]
NEFlowMetaData = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
]
NEHotspotConfigurationManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NEHotspotHelper = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURLRequest",
]
NEHotspotNetwork = ["objc2-foundation/NSString"]
NEIPv4Settings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEIPv6Settings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NENetworkRule = ["objc2-foundation/NSObject"]
NEOnDemandRule = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
NEPacket = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
]
NEPacketTunnelFlow = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSValue",
]
NEPacketTunnelNetworkSettings = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
NEPacketTunnelProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEProvider = ["objc2-foundation/NSString"]
NEProxySettings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
NERelay = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
NERelayManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NETransparentProxyManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
]
NETransparentProxyNetworkSettings = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NETransparentProxyProvider = []
NETunnelNetworkSettings = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NETunnelProvider = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NETunnelProviderManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NETunnelProviderProtocol = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NETunnelProviderSession = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEVPNConnection = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEVPNManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
NEVPNProtocol = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEVPNProtocolIKEv2 = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NEVPNProtocolIPSec = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NWBonjourServiceEndpoint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NWEndpoint = ["objc2-foundation/NSObject"]
NWHostEndpoint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
NWPath = []
NWTCPConnection = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
]
NWTLSParameters = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSValue",
]
NWUDPSession = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
]
all = [
    "NEAppProxyFlow",
    "NEAppProxyProvider",
    "NEAppProxyProviderManager",
    "NEAppProxyTCPFlow",
    "NEAppProxyUDPFlow",
    "NEAppPushManager",
    "NEAppPushProvider",
    "NEAppRule",
    "NEDNSProxyManager",
    "NEDNSProxyProvider",
    "NEDNSProxyProviderProtocol",
    "NEDNSSettings",
    "NEDNSSettingsManager",
    "NEEthernetTunnelNetworkSettings",
    "NEEthernetTunnelProvider",
    "NEFilterControlProvider",
    "NEFilterDataProvider",
    "NEFilterFlow",
    "NEFilterManager",
    "NEFilterPacketProvider",
    "NEFilterProvider",
    "NEFilterProviderConfiguration",
    "NEFilterRule",
    "NEFilterSettings",
    "NEFlowMetaData",
    "NEHotspotConfigurationManager",
    "NEHotspotHelper",
    "NEHotspotNetwork",
    "NEIPv4Settings",
    "NEIPv6Settings",
    "NENetworkRule",
    "NEOnDemandRule",
    "NEPacket",
    "NEPacketTunnelFlow",
    "NEPacketTunnelNetworkSettings",
    "NEPacketTunnelProvider",
    "NEProvider",
    "NEProxySettings",
    "NERelay",
    "NERelayManager",
    "NETransparentProxyManager",
    "NETransparentProxyNetworkSettings",
    "NETransparentProxyProvider",
    "NETunnelNetworkSettings",
    "NETunnelProvider",
    "NETunnelProviderManager",
    "NETunnelProviderProtocol",
    "NETunnelProviderSession",
    "NEVPNConnection",
    "NEVPNManager",
    "NEVPNProtocol",
    "NEVPNProtocolIKEv2",
    "NEVPNProtocolIPSec",
    "NWBonjourServiceEndpoint",
    "NWEndpoint",
    "NWHostEndpoint",
    "NWPath",
    "NWTCPConnection",
    "NWTLSParameters",
    "NWUDPSession",
    "block2",
    "libc",
]
