framework = "NetworkExtension"
crate = "objc2-network-extension"
required-crates = ["objc2", "objc2-foundation"]
macos = "10.10"
maccatalyst = "13.0"
ios = "8.0"
tvos = "17.0"
watchos = "7.0"
visionos = "1.0"

external.ASAccessory.module = "AccessorySetupKit.ASAccessory"

# See #778: the method has a wrongly-declared return nullability.
class.NWHostEndpoint.methods.hostname.return.nullability = "nullable"

# Needs Network framework
class.NEAppProxyFlow.methods."setMetadata:".skipped = true
class.NEAppProxyFlow.methods.networkInterface.skipped = true
class.NEAppProxyFlow.methods."setNetworkInterface:".skipped = true
class.NEAppProxyFlow.methods."openWithLocalFlowEndpoint:completionHandler:".skipped = true
class.NEAppProxyProvider.methods."handleNewUDPFlow:initialRemoteFlowEndpoint:".skipped = true
class.NEAppProxyTCPFlow.methods.remoteFlowEndpoint.skipped = true
typedef.NWEndpointArray.skipped = true
class.NEAppProxyUDPFlow.methods.localFlowEndpoint.skipped = true
class.NEAppProxyUDPFlow.methods."readDatagramsAndFlowEndpointsWithCompletionHandler:".skipped = true
class.NEAppProxyUDPFlow.methods."writeDatagrams:sentByFlowEndpoints:completionHandler:".skipped = true
class.NEDNSProxyProvider.methods."handleNewUDPFlow:initialRemoteFlowEndpoint:".skipped = true
typedef.NEFilterPacketHandler.skipped = true
class.NEFilterPacketProvider.methods.packetHandler.skipped = true
class.NEFilterPacketProvider.methods."setPacketHandler:".skipped = true
class.NEFilterSocketFlow.methods.remoteFlowEndpoint.skipped = true
class.NEFilterSocketFlow.methods.localFlowEndpoint.skipped = true
class.NEHotspotHelperCommand.methods.interface.skipped = true
class.NENetworkRule.methods."initWithDestinationNetworkEndpoint:prefix:protocol:".skipped = true
class.NENetworkRule.methods."initWithDestinationHostEndpoint:protocol:".skipped = true
class.NENetworkRule.methods."initWithRemoteNetworkEndpoint:remotePrefix:localNetworkEndpoint:localPrefix:protocol:direction:".skipped = true
class.NENetworkRule.methods.matchRemoteHostOrNetworkEndpoint.skipped = true
class.NENetworkRule.methods.matchLocalNetworkEndpoint.skipped = true
class.NEPacketTunnelProvider.methods.virtualInterface.skipped = true

# Wrongly renamed (Swift's renaming algorithm is insufficient)
const.NEHotspotConfigurationEAPTLSVersion_1_0.renamed = "Version_1_0"
const.NEHotspotConfigurationEAPTLSVersion_1_1.renamed = "Version_1_1"
const.NEHotspotConfigurationEAPTLSVersion_1_2.renamed = "Version_1_2"
const.NEVPNIKEv2EncryptionAlgorithmDES.renamed = "AlgorithmDES"
const.NEVPNIKEv2EncryptionAlgorithm3DES.renamed = "Algorithm3DES"
const.NEVPNIKEv2EncryptionAlgorithmAES128.renamed = "AlgorithmAES128"
const.NEVPNIKEv2EncryptionAlgorithmAES256.renamed = "AlgorithmAES256"
const.NEVPNIKEv2EncryptionAlgorithmAES128GCM.renamed = "AlgorithmAES128GCM"
const.NEVPNIKEv2EncryptionAlgorithmAES256GCM.renamed = "AlgorithmAES256GCM"
const.NEVPNIKEv2EncryptionAlgorithmChaCha20Poly1305.renamed = "AlgorithmChaCha20Poly1305"
