# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-ml"
version = "0.2.2" # Remember to update html_root_url in lib.rs
description = "Bindings to the CoreML framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
bitflags = { version = "2.5.0", default-features = false, optional = true }
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.2", default-features = false }

[target.'cfg(not(target_os = "watchos"))'.dependencies]
objc2-metal = { path = "../objc2-metal", version = "0.2.2", default-features = false, optional = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "bitflags?/std", "block2?/std", "objc2/std", "objc2-foundation/std", "objc2-metal?/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-foundation/alloc", "objc2-metal?/alloc"]
bitflags = ["dep:bitflags", "objc2-foundation/bitflags", "objc2-metal?/bitflags"]
block2 = ["dep:block2", "objc2-foundation/block2", "objc2-metal?/block2"]
objc2-metal = ["dep:objc2-metal"]

MLAllComputeDevices = ["objc2-foundation/NSArray"]
MLArrayBatchProvider = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLBatchProvider = []
MLCPUComputeDevice = []
MLComputeDeviceProtocol = []
MLComputePlan = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLComputePlanCost = []
MLComputePlanDeviceUsage = ["objc2-foundation/NSArray"]
MLCustomLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
    "objc2-metal?/MTLCommandBuffer",
    "objc2-metal?/MTLResource",
    "objc2-metal?/MTLTexture",
]
MLCustomModel = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLDictionaryConstraint = ["objc2-foundation/NSObject"]
MLDictionaryFeatureProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSEnumerator",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLExport = []
MLFeatureDescription = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLFeatureProvider = [
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
MLFeatureType = []
MLFeatureValue = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLFeatureValue_MLImageConversion = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MLGPUComputeDevice = ["objc2-metal?/MTLDevice"]
MLImageConstraint = ["objc2-foundation/NSObject"]
MLImageSize = ["objc2-foundation/NSObject"]
MLImageSizeConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSRange",
]
MLImageSizeConstraintType = []
MLKey = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLMetricKey = ["objc2-foundation/NSObject"]
MLModel = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLModelAsset = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSError",
]
MLModelCollection = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSNotification",
    "objc2-foundation/NSProgress",
    "objc2-foundation/NSString",
]
MLModelCollectionEntry = [
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MLModelConfiguration = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-metal?/MTLDevice",
]
MLModelDescription = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLModelError = ["objc2-foundation/NSString"]
MLModelMetadataKeys = ["objc2-foundation/NSString"]
MLModelStructure = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLModelStructureNeuralNetwork = ["objc2-foundation/NSArray"]
MLModelStructureNeuralNetworkLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructurePipeline = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructureProgram = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLModelStructureProgramArgument = ["objc2-foundation/NSArray"]
MLModelStructureProgramBinding = ["objc2-foundation/NSString"]
MLModelStructureProgramBlock = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructureProgramFunction = ["objc2-foundation/NSArray"]
MLModelStructureProgramNamedValueType = ["objc2-foundation/NSString"]
MLModelStructureProgramOperation = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLModelStructureProgramValue = []
MLModelStructureProgramValueType = []
MLModel_MLComputeDevice = ["objc2-foundation/NSArray"]
MLModel_MLModelCompilation = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLMultiArray = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayShapeConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayShapeConstraintType = []
MLNeuralEngineComputeDevice = []
MLNumericConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSValue",
]
MLOptimizationHints = ["objc2-foundation/NSObject"]
MLParameterDescription = ["objc2-foundation/NSObject"]
MLParameterKey = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLPredictionOptions = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLReshapeFrequencyHint = []
MLSequence = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLSequenceConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSRange",
]
MLTask = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLUpdateContext = ["objc2-foundation/NSDictionary"]
MLUpdateProgressEvent = ["bitflags"]
MLUpdateProgressHandlers = []
MLUpdateTask = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLWritable = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
all = [
    "MLAllComputeDevices",
    "MLArrayBatchProvider",
    "MLBatchProvider",
    "MLCPUComputeDevice",
    "MLComputeDeviceProtocol",
    "MLComputePlan",
    "MLComputePlanCost",
    "MLComputePlanDeviceUsage",
    "MLCustomLayer",
    "MLCustomModel",
    "MLDictionaryConstraint",
    "MLDictionaryFeatureProvider",
    "MLExport",
    "MLFeatureDescription",
    "MLFeatureProvider",
    "MLFeatureType",
    "MLFeatureValue",
    "MLFeatureValue_MLImageConversion",
    "MLGPUComputeDevice",
    "MLImageConstraint",
    "MLImageSize",
    "MLImageSizeConstraint",
    "MLImageSizeConstraintType",
    "MLKey",
    "MLMetricKey",
    "MLModel",
    "MLModelAsset",
    "MLModelCollection",
    "MLModelCollectionEntry",
    "MLModelConfiguration",
    "MLModelDescription",
    "MLModelError",
    "MLModelMetadataKeys",
    "MLModelStructure",
    "MLModelStructureNeuralNetwork",
    "MLModelStructureNeuralNetworkLayer",
    "MLModelStructurePipeline",
    "MLModelStructureProgram",
    "MLModelStructureProgramArgument",
    "MLModelStructureProgramBinding",
    "MLModelStructureProgramBlock",
    "MLModelStructureProgramFunction",
    "MLModelStructureProgramNamedValueType",
    "MLModelStructureProgramOperation",
    "MLModelStructureProgramValue",
    "MLModelStructureProgramValueType",
    "MLModel_MLComputeDevice",
    "MLModel_MLModelCompilation",
    "MLMultiArray",
    "MLMultiArrayConstraint",
    "MLMultiArrayShapeConstraint",
    "MLMultiArrayShapeConstraintType",
    "MLNeuralEngineComputeDevice",
    "MLNumericConstraint",
    "MLOptimizationHints",
    "MLParameterDescription",
    "MLParameterKey",
    "MLPredictionOptions",
    "MLReshapeFrequencyHint",
    "MLSequence",
    "MLSequenceConstraint",
    "MLTask",
    "MLUpdateContext",
    "MLUpdateProgressEvent",
    "MLUpdateProgressHandlers",
    "MLUpdateTask",
    "MLWritable",
    "bitflags",
    "block2",
    "objc2-metal",
]
